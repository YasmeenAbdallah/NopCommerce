{"Headers":{"Last-Modified":"Fri, 21 Oct 2022 12:14:39 GMT","X-Content-Type-Options":"nosniff"},"Body":"!function(n){!function(n){"use strict";function s(n){var t=u(n||{}),f=h(t);return r(f),c(t,f),i}function h(n){var i=f("uploaderType"),r=f("endpointType");return i?(i=i.charAt(0).toUpperCase()+i.slice(1).toLowerCase(),r?new t[r]["FineUploader"+i](n):new t["FineUploader"+i](n)):r?new t[r].FineUploader(n):new t.FineUploader(n)}function e(n,t){var r=i.data("fineuploader");if(!t)return void 0===r?null:r[n];void 0===r&&(r={});r[n]=t;i.data("fineuploader",r)}function r(n){return e("uploader",n)}function f(n,t){return e(n,t)}function c(r,u){var f=r.callbacks={};n.each(u._options.callbacks,function(r,u){var e,s;e=/^on(\w+)/.exec(r)[1];e=e.substring(0,1).toLowerCase()+e.substring(1);s=i;f[r]=function(){var i,r,f=Array.prototype.slice.call(arguments),h=[];n.each(f,function(n,t){h.push(o(t))});i=u.apply(this,f);try{r=s.triggerHandler(e,h)}catch(n){t.log("Caught error in Fine Uploader jQuery event handler: "+n.message,"error")}return null!=i?i:r}});u._options.callbacks=f}function u(t,r){var e,o;if(e=void 0===r?"basic"!==t.uploaderType?{element:i[0]}:{}:r,n.each(t,function(t,i){n.inArray(t,v)>=0?f(t,i):i instanceof n?e[t]=i[0]:n.isPlainObject(i)?(e[t]={},u(i,e[t])):n.isArray(i)?(o=[],n.each(i,function(t,i){var r={};i instanceof n?n.merge(o,i):n.isPlainObject(i)?(u(i,r),o.push(r)):o.push(i)}),e[t]=o):e[t]=i}),void 0===r)return e}function l(t){return"string"===n.type(t)&&!t.match(/^_/)&&void 0!==r()[t]}function a(n){var t,i=[],f=Array.prototype.slice.call(arguments,1);return u(f,i),t=r()[n].apply(r(),i),o(t)}function o(t){var i=t;return null==t||"object"!=typeof t||1!==t.nodeType&&9!==t.nodeType||!t.cloneNode||(i=n(t)),i}var i,v=["uploaderType","endpointType"];n.fn.fineUploader=function(t){var f=this,e=arguments,u=[];return this.each(function(o,h){if(i=n(h),r()&&l(t)){if(u.push(a.apply(f,e)),1===f.length)return!1}else"object"!=typeof t&&t?n.error("Method "+t+" does not exist on jQuery.fineUploader"):s.apply(f,e)}),1===u.length?u[0]:u.length>1?u:this}}(jQuery),function(n){"use strict";function f(n){n||(n={});n.dropZoneElements=[i];var f=u(n);return o(f),r(new t.DragAndDrop(f)),i}function e(n,t){var r=i.data("fineUploaderDnd");if(!t)return void 0===r?null:r[n];void 0===r&&(r={});r[n]=t;i.data("fineUploaderDnd",r)}function r(n){return e("dndInstance",n)}function o(r){var u=r.callbacks={};n.each(new t.DragAndDrop.callbacks,function(n){var t,r=n;t=i;u[n]=function(){var n=Array.prototype.slice.call(arguments);return t.triggerHandler(r,n)}})}function u(t,i){var r,f;if(r=void 0===i?{}:i,n.each(t,function(t,i){i instanceof n?r[t]=i[0]:n.isPlainObject(i)?(r[t]={},u(i,r[t])):n.isArray(i)?(f=[],n.each(i,function(t,i){i instanceof n?n.merge(f,i):f.push(i)}),r[t]=f):r[t]=i}),void 0===i)return r}function s(t){return"string"===n.type(t)&&"dispose"===t&&void 0!==r()[t]}function h(n){var t=[];return u(Array.prototype.slice.call(arguments,1),t),r()[n].apply(r(),t)}var i;n.fn.fineUploaderDnd=function(t){var e=this,o=arguments,u=[];return this.each(function(c,l){if(i=n(l),r()&&s(t)){if(u.push(h.apply(e,o)),1===e.length)return!1}else"object"!=typeof t&&t?n.error("Method "+t+" does not exist in Fine Uploader's DnD module."):f.apply(e,o)}),1===u.length?u[0]:u.length>1?u:this}}(jQuery);var t=function(n){"use strict";return{hide:function(){return n.style.display="none",this},attach:function(i,r){return n.addEventListener?n.addEventListener(i,r,!1):n.attachEvent&&n.attachEvent("on"+i,r),function(){t(n).detach(i,r)}},detach:function(t,i){return n.removeEventListener?n.removeEventListener(t,i,!1):n.attachEvent&&n.detachEvent("on"+t,i),this},contains:function(t){return!!t&&(n===t||(n.contains?n.contains(t):!!(8&t.compareDocumentPosition(n))))},insertBefore:function(t){return t.parentNode.insertBefore(n,t),this},remove:function(){return n.parentNode.removeChild(n),this},css:function(i){if(null==n.style)throw new t.Error("Can't apply style to node as it is not on the HTMLElement prototype chain!");return null!=i.opacity&&"string"!=typeof n.style.opacity&&void 0!==n.filters&&(i.filter="alpha(opacity="+Math.round(100*i.opacity)+")"),t.extend(n.style,i),this},hasClass:function(t,i){var r=new RegExp("(^| )"+t+"( |$)");return r.test(n.className)||!(!i||!r.test(n.parentNode.className))},addClass:function(i){return t(n).hasClass(i)||(n.className+=" "+i),this},removeClass:function(t){var i=new RegExp("(^| )"+t+"( |$)");return n.className=n.className.replace(i," ").replace(/^\s+|\s+$/g,""),this},getByClass:function(i,r){var f,u=[];return r&&n.querySelector?n.querySelector("."+i):n.querySelectorAll?n.querySelectorAll("."+i):(f=n.getElementsByTagName("*"),t.each(f,function(n,r){t(r).hasClass(i)&&u.push(r)}),r?u[0]:u)},getFirstByClass:function(i){return t(n).getByClass(i,!0)},children:function(){for(var i=[],t=n.firstChild;t;)1===t.nodeType&&i.push(t),t=t.nextSibling;return i},setText:function(t){return n.innerText=t,n.textContent=t,this},clearText:function(){return t(n).setText("")},hasAttribute:function(t){var i;return n.hasAttribute?!!n.hasAttribute(t)&&null==/^false$/i.exec(n.getAttribute(t)):(i=n[t],void 0!==i&&null==/^false$/i.exec(i))}}};!function(){"use strict";t.canvasToBlob=function(n,i,r){return t.dataUriToBlob(n.toDataURL(i,r))};t.dataUriToBlob=function(n){var i,r,u,f,e=function(n,t){var r=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,i=r&&new r;return i?(i.append(n),i.getBlob(t)):new Blob([n],{type:t})};return r=n.split(",")[0].indexOf("base64")>=0?atob(n.split(",")[1]):decodeURI(n.split(",")[1]),f=n.split(",")[0].split(":")[1].split(";")[0],i=new ArrayBuffer(r.length),u=new Uint8Array(i),t.each(r,function(n,t){u[n]=t.charCodeAt(0)}),e(i,f)};t.log=function(n,t){window.console&&(t&&"info"!==t?window.console[t]?window.console[t](n):window.console.log("<"+t+"> "+n):window.console.log(n))};t.isObject=function(n){return n&&!n.nodeType&&"[object Object]"===Object.prototype.toString.call(n)};t.isFunction=function(n){return"function"==typeof n};t.isArray=function(n){return"[object Array]"===Object.prototype.toString.call(n)||n&&window.ArrayBuffer&&n.buffer&&n.buffer.constructor===ArrayBuffer};t.isItemList=function(n){return"[object DataTransferItemList]"===Object.prototype.toString.call(n)};t.isNodeList=function(n){return"[object NodeList]"===Object.prototype.toString.call(n)||n.item&&n.namedItem};t.isString=function(n){return"[object String]"===Object.prototype.toString.call(n)};t.trimStr=function(n){return String.prototype.trim?n.trim():n.replace(/^\s+|\s+$/g,"")};t.format=function(n){var u=Array.prototype.slice.call(arguments,1),i=n,r=i.indexOf("{}");return t.each(u,function(n,t){if(i=i.substring(0,r)+t+i.substring(r+2),r=i.indexOf("{}",r+t.length),r<0)return!1}),i};t.isFile=function(n){return window.File&&"[object File]"===Object.prototype.toString.call(n)};t.isFileList=function(n){return window.FileList&&"[object FileList]"===Object.prototype.toString.call(n)};t.isFileOrInput=function(n){return t.isFile(n)||t.isInput(n)};t.isInput=function(n,t){var i=function(n){var i=n.toLowerCase();return t?"file"!==i:"file"===i};return!!(window.HTMLInputElement&&"[object HTMLInputElement]"===Object.prototype.toString.call(n)&&n.type&&i(n.type))||!!(n.tagName&&"input"===n.tagName.toLowerCase()&&n.type&&i(n.type))};t.isBlob=function(n){if(window.Blob&&"[object Blob]"===Object.prototype.toString.call(n))return!0};t.isXhrUploadSupported=function(){var n=document.createElement("input");return n.type="file",void 0!==n.multiple&&"undefined"!=typeof File&&"undefined"!=typeof FormData&&void 0!==t.createXhrInstance().upload};t.createXhrInstance=function(){if(window.XMLHttpRequest)return new XMLHttpRequest;try{return new ActiveXObject("MSXML2.XMLHTTP.3.0")}catch(n){return t.log("Neither XHR or ActiveX are supported!","error"),null}};t.isFolderDropSupported=function(n){return n.items&&n.items.length>0&&n.items[0].webkitGetAsEntry};t.isFileChunkingSupported=function(){return!t.androidStock()&&t.isXhrUploadSupported()&&(void 0!==File.prototype.slice||void 0!==File.prototype.webkitSlice||void 0!==File.prototype.mozSlice)};t.sliceBlob=function(n,t,i){return(n.slice||n.mozSlice||n.webkitSlice).call(n,t,i)};t.arrayBufferToHex=function(n){var i="",r=new Uint8Array(n);return t.each(r,function(n,t){var r=t.toString(16);r.length<2&&(r="0"+r);i+=r}),i};t.readBlobToHex=function(n,i,r){var e=t.sliceBlob(n,i,i+r),u=new FileReader,f=new t.Promise;return u.onload=function(){f.success(t.arrayBufferToHex(u.result))},u.onerror=f.failure,u.readAsArrayBuffer(e),f};t.extend=function(n,i,r){return t.each(i,function(i,u){r&&t.isObject(u)?(void 0===n[i]&&(n[i]={}),t.extend(n[i],u,!0)):n[i]=u}),n};t.override=function(n,i){var r={},u=i(r);return t.each(u,function(t,i){void 0!==n[t]&&(r[t]=n[t]);n[t]=i}),n};t.indexOf=function(n,t,i){if(n.indexOf)return n.indexOf(t,i);i=i||0;var r=n.length;for(i<0&&(i+=r);i<r;i+=1)if(n.hasOwnProperty(i)&&n[i]===t)return i;return-1};t.getUniqueId=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){var t=16*Math.random()|0;return("x"==n?t:3&t|8).toString(16)})};t.ie=function(){return navigator.userAgent.indexOf("MSIE")!==-1||navigator.userAgent.indexOf("Trident")!==-1};t.ie7=function(){return navigator.userAgent.indexOf("MSIE 7")!==-1};t.ie8=function(){return navigator.userAgent.indexOf("MSIE 8")!==-1};t.ie10=function(){return navigator.userAgent.indexOf("MSIE 10")!==-1};t.ie11=function(){return t.ie()&&navigator.userAgent.indexOf("rv:11")!==-1};t.edge=function(){return navigator.userAgent.indexOf("Edge")>=0};t.safari=function(){return void 0!==navigator.vendor&&navigator.vendor.indexOf("Apple")!==-1};t.chrome=function(){return void 0!==navigator.vendor&&navigator.vendor.indexOf("Google")!==-1};t.opera=function(){return void 0!==navigator.vendor&&navigator.vendor.indexOf("Opera")!==-1};t.firefox=function(){return!t.edge()&&!t.ie11()&&navigator.userAgent.indexOf("Mozilla")!==-1&&void 0!==navigator.vendor&&""===navigator.vendor};t.windows=function(){return"Win32"===navigator.platform};t.android=function(){return navigator.userAgent.toLowerCase().indexOf("android")!==-1};t.androidStock=function(){return t.android()&&navigator.userAgent.toLowerCase().indexOf("chrome")<0};t.ios6=function(){return t.ios()&&navigator.userAgent.indexOf(" OS 6_")!==-1};t.ios7=function(){return t.ios()&&navigator.userAgent.indexOf(" OS 7_")!==-1};t.ios8=function(){return t.ios()&&navigator.userAgent.indexOf(" OS 8_")!==-1};t.ios800=function(){return t.ios()&&navigator.userAgent.indexOf(" OS 8_0 ")!==-1};t.ios=function(){return navigator.userAgent.indexOf("iPad")!==-1||navigator.userAgent.indexOf("iPod")!==-1||navigator.userAgent.indexOf("iPhone")!==-1};t.iosChrome=function(){return t.ios()&&navigator.userAgent.indexOf("CriOS")!==-1};t.iosSafari=function(){return t.ios()&&!t.iosChrome()&&navigator.userAgent.indexOf("Safari")!==-1};t.iosSafariWebView=function(){return t.ios()&&!t.iosChrome()&&!t.iosSafari()};t.preventDefault=function(n){n.preventDefault?n.preventDefault():n.returnValue=!1};t.toElement=function(){var n=document.createElement("div");return function(t){n.innerHTML=t;var i=n.firstChild;return n.removeChild(i),i}}();t.each=function(n,i){var r,u;if(n)if(window.Storage&&n.constructor===window.Storage)for(r=0;r<n.length&&(u=i(n.key(r),n.getItem(n.key(r))),u!==!1);r++);else if(t.isArray(n)||t.isItemList(n)||t.isNodeList(n))for(r=0;r<n.length&&(u=i(r,n[r]),u!==!1);r++);else if(t.isString(n))for(r=0;r<n.length&&(u=i(r,n.charAt(r)),u!==!1);r++);else for(r in n)if(Object.prototype.hasOwnProperty.call(n,r)&&(u=i(r,n[r]),u===!1))break};t.bind=function(n,i){if(t.isFunction(n)){var r=Array.prototype.slice.call(arguments,2);return function(){var u=t.extend([],r);return arguments.length&&(u=u.concat(Array.prototype.slice.call(arguments))),n.apply(i,u)}}throw new Error("first parameter must be a function!");};t.obj2url=function(n,i,r){var u=[],f="&",e=function(n,r){var f=i?/\[\]$/.test(i)?i:i+"["+r+"]":r;"undefined"!==f&&"undefined"!==r&&u.push("object"==typeof n?t.obj2url(n,f,!0):"[object Function]"===Object.prototype.toString.call(n)?encodeURIComponent(f)+"="+encodeURIComponent(n()):encodeURIComponent(f)+"="+encodeURIComponent(n))};return!r&&i?(f=/\?/.test(i)?/\?$/.test(i)?"":"&":"?",u.push(i),u.push(t.obj2url(n))):"[object Array]"===Object.prototype.toString.call(n)&&void 0!==n?t.each(n,function(n,t){e(t,n)}):void 0!==n&&null!==n&&"object"==typeof n?t.each(n,function(n,t){e(t,n)}):u.push(encodeURIComponent(i)+"="+encodeURIComponent(n)),i?u.join(f):u.join(f).replace(/^&/,"").replace(/%20/g,"+")};t.obj2FormData=function(n,i,r){return i||(i=new FormData),t.each(n,function(n,u){n=r?r+"["+n+"]":n;t.isObject(u)?t.obj2FormData(u,i,n):t.isFunction(u)?i.append(n,u()):i.append(n,u)}),i};t.obj2Inputs=function(n,i){var r;return i||(i=document.createElement("form")),t.obj2FormData(n,{append:function(n,t){r=document.createElement("input");r.setAttribute("name",n);r.setAttribute("value",t);i.appendChild(r)}}),i};t.parseJson=function(n){return window.JSON&&t.isFunction(JSON.parse)?JSON.parse(n):eval("("+n+")")};t.getExtension=function(n){var t=n.lastIndexOf(".")+1;if(t>0)return n.substr(t,n.length-t)};t.getFilename=function(n){return t.isInput(n)?n.value.replace(/.*(\/|\\)/,""):t.isFile(n)&&null!==n.fileName&&void 0!==n.fileName?n.fileName:n.name};t.DisposeSupport=function(){var n=[];return{dispose:function(){var t;do t=n.shift(),t&&t();while(t)},attach:function(){var n=arguments;this.addDisposer(t(n[0]).attach.apply(this,Array.prototype.slice.call(arguments,1)))},addDisposer:function(t){n.push(t)}}}}(),function(){"use strict";"function"==typeof define&&define.amd?define(function(){return t}):"undefined"!=typeof module&&module.exports?module.exports=t:n.qq=t}(),function(){"use strict";t.Error=function(n){this.message="[Fine Uploader "+t.version+"] "+n};t.Error.prototype=new Error}();t.version="5.16.2";t.supportedFeatures=function(){"use strict";function k(){var n,i=!0;try{n=document.createElement("input");n.type="file";t(n).hide();n.disabled&&(i=!1)}catch(n){i=!1}return i}function d(){return(t.chrome()||t.opera())&&void 0!==navigator.userAgent.match(/Chrome\/[1][4-9]|Chrome\/[2-9][0-9]/)}function o(){return window.XMLHttpRequest?void 0!==t.createXhrInstance().withCredentials:!1}function s(){return void 0!==window.XDomainRequest}function g(){return!!o()||s()}function nt(){return void 0!==document.createElement("input").webkitdirectory}function tt(){try{return!!window.localStorage&&t.isFunction(window.localStorage.setItem)}catch(n){return!1}}function it(){var n=document.createElement("span");return("draggable"in n||"ondragstart"in n&&"ondrop"in n)&&!t.android()&&!t.ios()}var i,f,e,n,h,r,c,l,a,v,y,p,w,u,b;return i=k(),n=i&&t.isXhrUploadSupported(),f=n&&!t.androidStock(),e=n&&it(),h=e&&function(){var n=document.createElement("input");return n.type="file",!!("webkitdirectory"in(n||document.querySelectorAll("input[type=file]")[0]))}(),r=n&&t.isFileChunkingSupported(),c=n&&r&&tt(),l=n&&d(),a=i&&(void 0!==window.postMessage||n),y=o(),v=s(),p=g(),w=nt(),u=n&&void 0!==window.FileReader,b=function(){return!!n&&!t.androidStock()&&!t.iosChrome()}(),{ajaxUploading:n,blobUploading:f,canDetermineSize:n,chunking:r,deleteFileCors:p,deleteFileCorsXdr:v,deleteFileCorsXhr:y,dialogElement:!!window.HTMLDialogElement,fileDrop:e,folderDrop:h,folderSelection:w,imagePreviews:u,imageValidation:u,itemSizeValidation:n,pause:r,progressBar:b,resume:c,scaling:u&&f,tiffPreviews:t.safari(),unlimitedScaledImageSize:!t.ios(),uploading:i,uploadCors:a,uploadCustomHeaders:n,uploadNonMultipart:n,uploadViaPaste:l}}();t.isGenericPromise=function(n){"use strict";return!!(n&&n.then&&t.isFunction(n.then))};t.Promise=function(){"use strict";var i,n,f=[],e=[],r=[],u=0;t.extend(this,{then:function(t,r){return 0===u?(t&&f.push(t),r&&e.push(r)):u===-1?r&&r.apply(null,n):t&&t.apply(null,i),this},done:function(t){return 0===u?r.push(t):t.apply(null,void 0===n?i:n),this},success:function(){return u=1,i=arguments,f.length&&t.each(f,function(n,t){t.apply(null,i)}),r.length&&t.each(r,function(n,t){t.apply(null,i)}),this},failure:function(){return u=-1,n=arguments,e.length&&t.each(e,function(t,i){i.apply(null,n)}),r.length&&t.each(r,function(t,i){i.apply(null,n)}),this}})};t.BlobProxy=function(n,i){"use strict";t.extend(this,{referenceBlob:n,create:function(){return i(n)}})};t.UploadButton=function(n){"use strict";function e(){var n=document.createElement("input");return n.setAttribute(t.UploadButton.BUTTON_ID_ATTR_NAME,f),n.setAttribute("title",i.title),o.setMultiple(i.multiple,n),i.folders&&t.supportedFeatures.folderSelection&&n.setAttribute("webkitdirectory",""),i.acceptFiles&&n.setAttribute("accept",i.acceptFiles),n.setAttribute("type","file"),n.setAttribute("name",i.name),t(n).css({position:"absolute",right:0,top:0,fontFamily:"Arial",fontSize:t.ie()&&!t.ie8()?"3500px":"118px",margin:0,padding:0,cursor:"pointer",opacity:0}),!t.ie7()&&t(n).css({height:"100%"}),i.element.appendChild(n),u.attach(n,"change",function(){i.onChange(n)}),u.attach(n,"mouseover",function(){t(i.element).addClass(i.hoverClass)}),u.attach(n,"mouseout",function(){t(i.element).removeClass(i.hoverClass)}),u.attach(n,"focus",function(){t(i.element).addClass(i.focusClass)}),u.attach(n,"blur",function(){t(i.element).removeClass(i.focusClass)}),n}var r,f,o=this,u=new t.DisposeSupport,i={acceptFiles:null,element:null,focusClass:"qq-upload-button-focus",folders:!1,hoverClass:"qq-upload-button-hover",ios8BrowserCrashWorkaround:!1,multiple:!1,name:"qqfile",onChange:function(){},title:null};t.extend(i,n);f=t.getUniqueId();t(i.element).css({position:"relative",overflow:"hidden",direction:"ltr"});t.extend(this,{getInput:function(){return r},getButtonId:function(){return f},setMultiple:function(n,r){var u=r||this.getInput();i.ios8BrowserCrashWorkaround&&t.ios8()&&(t.iosChrome()||t.iosSafariWebView())?u.setAttribute("multiple",""):n?u.setAttribute("multiple",""):u.removeAttribute("multiple")},setAcceptFiles:function(n){n!==i.acceptFiles&&r.setAttribute("accept",n)},reset:function(){r.parentNode&&t(r).remove();t(i.element).removeClass(i.focusClass);r=null;r=e()}});r=e()};t.UploadButton.BUTTON_ID_ATTR_NAME="qq-button-id";t.UploadData=function(n){"use strict";function o(n){if(t.isArray(n)){var r=[];return t.each(n,function(n,t){r.push(i[t])}),r}return i[n]}function s(n){if(t.isArray(n)){var r=[];return t.each(n,function(n,t){r.push(i[u[t]])}),r}return i[u[n]]}function h(n){var u=[],f=[].concat(n);return t.each(f,function(n,f){var e=r[f];void 0!==e&&t.each(e,function(n,t){u.push(i[t])})}),u}var i=[],u={},r={},e={},f={};t.extend(this,{addFile:function(o){var h=o.status||t.status.SUBMITTING,s=i.push({name:o.name,originalName:o.name,uuid:o.uuid,size:null==o.size?-1:o.size,status:h,file:o.file})-1;return o.batchId&&(i[s].batchId=o.batchId,void 0===f[o.batchId]&&(f[o.batchId]=[]),f[o.batchId].push(s)),o.proxyGroupId&&(i[s].proxyGroupId=o.proxyGroupId,void 0===e[o.proxyGroupId]&&(e[o.proxyGroupId]=[]),e[o.proxyGroupId].push(s)),i[s].id=s,u[o.uuid]=s,void 0===r[h]&&(r[h]=[]),r[h].push(s),o.onBeforeStatusChange&&o.onBeforeStatusChange(s),n.onStatusChange(s,null,h),s},retrieve:function(n){return t.isObject(n)&&i.length?void 0!==n.id?o(n.id):void 0!==n.uuid?s(n.uuid):n.status?h(n.status):void 0:t.extend([],i,!0)},removeFileRef:function(n){var t=o(n);t&&delete t.file},reset:function(){i=[];u={};r={};f={}},setStatus:function(u,f){var e=i[u].status,o=t.indexOf(r[e],u);r[e].splice(o,1);i[u].status=f;void 0===r[f]&&(r[f]=[]);r[f].push(u);n.onStatusChange(u,e,f)},uuidChanged:function(n,t){var r=i[n].uuid;i[n].uuid=t;u[t]=n;delete u[r]},updateName:function(n,t){i[n].name=t},updateSize:function(n,t){i[n].size=t},setParentId:function(n,t){i[n].parentId=t},getIdsInProxyGroup:function(n){var t=i[n].proxyGroupId;return t?e[t]:[]},getIdsInBatch:function(n){return f[i[n].batchId]}})};t.status={SUBMITTING:"submitting",SUBMITTED:"submitted",REJECTED:"rejected",QUEUED:"queued",CANCELED:"canceled",PAUSED:"paused",UPLOADING:"uploading",UPLOAD_FINALIZING:"upload finalizing",UPLOAD_RETRYING:"retrying upload",UPLOAD_SUCCESSFUL:"upload successful",UPLOAD_FAILED:"upload failed",DELETE_FAILED:"delete failed",DELETING:"deleting",DELETED:"deleted"},function(){"use strict";t.basePublicApi={addBlobs:function(n,t,i){this.addFiles(n,t,i)},addInitialFiles:function(n){var i=this;t.each(n,function(n,t){i._addCannedFile(t)})},addFiles:function(n,i,r){this._maybeHandleIos8SafariWorkaround();var f=0===this._storedIds.length?t.getUniqueId():this._currentBatchId,e=t.bind(function(n){this._handleNewFile({blob:n,name:this._options.blobs.defaultName},f,u)},this),o=t.bind(function(n){this._handleNewFile(n,f,u)},this),s=t.bind(function(n){var i=t.canvasToBlob(n);this._handleNewFile({blob:i,name:this._options.blobs.defaultName+".png"},f,u)},this),h=t.bind(function(n){var i=n.quality&&n.quality/100,r=t.canvasToBlob(n.canvas,n.type,i);this._handleNewFile({blob:r,name:n.name},f,u)},this),c=t.bind(function(n){if(t.isInput(n)&&t.supportedFeatures.ajaxUploading){var i=Array.prototype.slice.call(n.files),r=this;t.each(i,function(n,t){r._handleNewFile(t,f,u)})}else this._handleNewFile(n,f,u)},this),l=function(){t.isFileList(n)&&(n=Array.prototype.slice.call(n));n=[].concat(n)},a=this,u=[];this._currentBatchId=f;n&&(l(),t.each(n,function(n,i){t.isFileOrInput(i)?c(i):t.isBlob(i)?e(i):t.isObject(i)?i.blob&&i.name?o(i):i.canvas&&i.name&&h(i):i.tagName&&"canvas"===i.tagName.toLowerCase()?s(i):a.log(i+" is not a valid file container!  Ignoring!","warn")}),this.log("Received "+u.length+" files."),this._prepareItemsForUpload(u,i,r))},cancel:function(n){var i=this._uploadData.retrieve({id:n});i&&i.status===t.status.UPLOAD_FINALIZING?this.log(t.format("Ignoring cancel for file ID {} ({}).  Finalizing upload.",n,this.getName(n)),"error"):this._handler.cancel(n)},cancelAll:function(){var n=[],i=this;t.extend(n,this._storedIds);t.each(n,function(n,t){i.cancel(t)});this._handler.cancelAll()},clearStoredFiles:function(){this._storedIds=[]},continueUpload:function(n){var i=this._uploadData.retrieve({id:n});return!(!t.supportedFeatures.pause||!this._options.chunking.enabled)&&(i.status===t.status.PAUSED?(this.log(t.format("Paused file ID {} ({}) will be continued.  Not paused.",n,this.getName(n))),this._uploadFile(n),!0):(this.log(t.format("Ignoring continue for file ID {} ({}).  Not paused.",n,this.getName(n)),"error"),!1))},deleteFile:function(n){return this._onSubmitDelete(n)},doesExist:function(n){return this._handler.isValid(n)},drawThumbnail:function(n,i,r,u,f){var o,s,e=new t.Promise;return this._imageGenerator?(o=this._thumbnailUrls[n],s={customResizeFunction:f,maxSize:r>0?r:null,scale:r>0},!u&&t.supportedFeatures.imagePreviews&&(o=this.getFile(n)),null==o?e.failure({container:i,error:"File or URL not found."}):this._imageGenerator.generate(o,i,s).then(function(n){e.success(n)},function(n,t){e.failure({container:n,error:t||"Problem generating thumbnail"})})):e.failure({container:i,error:"Missing image generator module"}),e},getButton:function(n){return this._getButton(this._buttonIdsForFileIds[n])},getEndpoint:function(n){return this._endpointStore.get(n)},getFile:function(n){var t,i=this._handler.getFile(n);return i||(t=this._uploadData.retrieve({id:n}),t&&(i=t.file)),i||null},getInProgress:function(){return this._uploadData.retrieve({status:[t.status.UPLOADING,t.status.UPLOAD_RETRYING,t.status.QUEUED]}).length},getName:function(n){return this._uploadData.retrieve({id:n}).name},getParentId:function(n){var t=this.getUploads({id:n}),i=null;return t&&void 0!==t.parentId&&(i=t.parentId),i},getResumableFilesData:function(){return this._handler.getResumableFilesData()},getSize:function(n){return this._uploadData.retrieve({id:n}).size},getNetUploads:function(){return this._netUploaded},getRemainingAllowedItems:function(){var n=this._currentItemLimit;return n>0?n-this._netUploadedOrQueued:null},getUploads:function(n){return this._uploadData.retrieve(n)},getUuid:function(n){return this._uploadData.retrieve({id:n}).uuid},isResumable:function(n){return this._handler.hasResumeRecord(n)},log:function(n,i){!this._options.debug||i&&"info"!==i?i&&"info"!==i&&t.log("[Fine Uploader "+t.version+"] "+n,i):t.log("[Fine Uploader "+t.version+"] "+n)},pauseUpload:function(n){var i=this._uploadData.retrieve({id:n});if(!t.supportedFeatures.pause||!this._options.chunking.enabled)return!1;if(t.indexOf([t.status.UPLOADING,t.status.UPLOAD_RETRYING],i.status)>=0){if(this._handler.pause(n))return this._uploadData.setStatus(n,t.status.PAUSED),!0;this.log(t.format("Unable to pause file ID {} ({}).",n,this.getName(n)),"error")}else this.log(t.format("Ignoring pause for file ID {} ({}).  Not in progress.",n,this.getName(n)),"error");return!1},removeFileRef:function(n){this._handler.expunge(n);this._uploadData.removeFileRef(n)},reset:function(){this.log("Resetting uploader...");this._handler.reset();this._storedIds=[];this._autoRetries=[];this._retryTimeouts=[];this._preventRetries=[];this._thumbnailUrls=[];t.each(this._buttons,function(n,t){t.reset()});this._paramsStore.reset();this._endpointStore.reset();this._netUploadedOrQueued=0;this._netUploaded=0;this._uploadData.reset();this._buttonIdsForFileIds=[];this._pasteHandler&&this._pasteHandler.reset();this._options.session.refreshOnReset&&this._refreshSessionData();this._succeededSinceLastAllComplete=[];this._failedSinceLastAllComplete=[];this._totalProgress&&this._totalProgress.reset();this._customResumeDataStore.reset()},retry:function(n){return this._manualRetry(n)},scaleImage:function(n,i){var r=this;return t.Scaler.prototype.scaleImage(n,i,{log:t.bind(r.log,r),getFile:t.bind(r.getFile,r),uploadData:r._uploadData})},setCustomHeaders:function(n,t){this._customHeadersStore.set(n,t)},setCustomResumeData:function(n,t){this._customResumeDataStore.set(t,n)},setDeleteFileCustomHeaders:function(n,t){this._deleteFileCustomHeadersStore.set(n,t)},setDeleteFileEndpoint:function(n,t){this._deleteFileEndpointStore.set(n,t)},setDeleteFileParams:function(n,t){this._deleteFileParamsStore.set(n,t)},setEndpoint:function(n,t){this._endpointStore.set(n,t)},setForm:function(n){this._updateFormSupportAndParams(n)},setItemLimit:function(n){this._currentItemLimit=n},setName:function(n,t){this._uploadData.updateName(n,t)},setParams:function(n,t){this._paramsStore.set(n,t)},setUuid:function(n,t){return this._uploadData.uuidChanged(n,t)},setStatus:function(n,i){if(!this.getUploads({id:n}))throw new t.Error(n+" is not a valid file ID.");switch(i){case t.status.DELETED:this._onDeleteComplete(n,null,!1);break;case t.status.DELETE_FAILED:this._onDeleteComplete(n,null,!0);break;default:var r="Method setStatus called on '"+name+"' not implemented yet for "+i;throw this.log(r),new t.Error(r);}},uploadStoredFiles:function(){0===this._storedIds.length?this._itemError("noFilesError"):this._uploadStoredFiles()}};t.basePrivateApi={_addCannedFile:function(n){var i=this;return this._uploadData.addFile({uuid:n.uuid,name:n.name,size:n.size,status:t.status.UPLOAD_SUCCESSFUL,onBeforeStatusChange:function(t){n.deleteFileEndpoint&&i.setDeleteFileEndpoint(n.deleteFileEndpoint,t);n.deleteFileParams&&i.setDeleteFileParams(n.deleteFileParams,t);n.thumbnailUrl&&(i._thumbnailUrls[t]=n.thumbnailUrl);i._netUploaded++;i._netUploadedOrQueued++}})},_annotateWithButtonId:function(n,i){t.isFile(n)&&(n.qqButtonId=this._getButtonId(i))},_batchError:function(n){this._options.callbacks.onError(null,null,n,void 0)},_createDeleteHandler:function(){var n=this;return new t.DeleteFileAjaxRequester({method:this._options.deleteFile.method.toUpperCase(),maxConnections:this._options.maxConnections,uuidParamName:this._options.request.uuidName,customHeaders:this._deleteFileCustomHeadersStore,paramsStore:this._deleteFileParamsStore,endpointStore:this._deleteFileEndpointStore,cors:this._options.cors,log:t.bind(n.log,n),onDelete:function(t){n._onDelete(t);n._options.callbacks.onDelete(t)},onDeleteComplete:function(t,i,r){n._onDeleteComplete(t,i,r);n._options.callbacks.onDeleteComplete(t,i,r)}})},_createPasteHandler:function(){var n=this;return new t.PasteSupport({targetElement:this._options.paste.targetElement,callbacks:{log:t.bind(n.log,n),pasteReceived:function(i){n._handleCheckedCallback({name:"onPasteReceived",callback:t.bind(n._options.callbacks.onPasteReceived,n,i),onSuccess:t.bind(n._handlePasteSuccess,n,i),identifier:"pasted image"})}}})},_createStore:function(n,i){var u={},o=n,f={},r=i,e=function(n){return t.isObject(n)?t.extend({},n):n},s=function(){return t.isFunction(r)?r():r},h=function(n,i){r&&t.isObject(i)&&t.extend(i,s());f[n]&&t.extend(i,f[n])};return{set:function(n,t){null==t?(u={},o=e(n)):u[t]=e(n)},get:function(n){var t;return t=null!=n&&u[n]?u[n]:e(o),h(n,t),e(t)},addReadOnly:function(n,i){t.isObject(u)&&(null===n?t.isFunction(i)?r=i:(r=r||{},t.extend(r,i)):(f[n]=f[n]||{},t.extend(f[n],i)))},remove:function(n){return delete u[n]},reset:function(){u={};f={};o=n}}},_createUploadDataTracker:function(){var n=this;return new t.UploadData({getName:function(t){return n.getName(t)},getUuid:function(t){return n.getUuid(t)},getSize:function(t){return n.getSize(t)},onStatusChange:function(t,i,r){n._onUploadStatusChange(t,i,r);n._options.callbacks.onStatusChange(t,i,r);n._maybeAllComplete(t,r);n._totalProgress&&setTimeout(function(){n._totalProgress.onStatusChange(t,i,r)},0)}})},_createUploadButton:function(n){function u(){return!!t.supportedFeatures.ajaxUploading&&!(i._options.workarounds.iosEmptyVideos&&t.ios()&&!t.ios6()&&i._isAllowedExtension(e,".mov"))&&(void 0===n.multiple?i._options.multiple:n.multiple)}var r,i=this,f=n.accept||this._options.validation.acceptFiles,e=n.allowedExtensions||this._options.validation.allowedExtensions;return r=new t.UploadButton({acceptFiles:f,element:n.element,focusClass:this._options.classes.buttonFocus,folders:n.folders,hoverClass:this._options.classes.buttonHover,ios8BrowserCrashWorkaround:this._options.workarounds.ios8BrowserCrash,multiple:u(),name:this._options.request.inputName,onChange:function(n){i._onInputChange(n)},title:null==n.title?this._options.text.fileInputTitle:n.title}),this._disposeSupport.addDisposer(function(){r.dispose()}),i._buttons.push(r),r},_createUploadHandler:function(n,i){var r=this,u={},f={debug:this._options.debug,maxConnections:this._options.maxConnections,cors:this._options.cors,paramsStore:this._paramsStore,endpointStore:this._endpointStore,chunking:this._options.chunking,resume:this._options.resume,blobs:this._options.blobs,log:t.bind(r.log,r),preventRetryParam:this._options.retry.preventRetryResponseProperty,onProgress:function(n,t,i,f){i<0||f<0||(u[n]?u[n].loaded===i&&u[n].total===f||(r._onProgress(n,t,i,f),r._options.callbacks.onProgress(n,t,i,f)):(r._onProgress(n,t,i,f),r._options.callbacks.onProgress(n,t,i,f)),u[n]={loaded:i,total:f})},onComplete:function(n,i,f,e){delete u[n];var o,s=r.getUploads({id:n}).status;s!==t.status.UPLOAD_SUCCESSFUL&&s!==t.status.UPLOAD_FAILED&&(o=r._onComplete(n,i,f,e),o instanceof t.Promise?o.done(function(){r._options.callbacks.onComplete(n,i,f,e)}):r._options.callbacks.onComplete(n,i,f,e))},onCancel:function(n,i,u){var f=new t.Promise;return r._handleCheckedCallback({name:"onCancel",callback:t.bind(r._options.callbacks.onCancel,r,n,i),onFailure:f.failure,onSuccess:function(){u.then(function(){r._onCancel(n,i)});f.success()},identifier:n}),f},onUploadPrep:t.bind(this._onUploadPrep,this),onUpload:function(n,i){r._onUpload(n,i);var u=r._options.callbacks.onUpload(n,i);return t.isGenericPromise(u)?(r.log(t.format("onUpload for {} returned a Promise - waiting for resolution.",n)),u):(new t.Promise).success()},onUploadChunk:function(n,i,u){r._onUploadChunk(n,u);var f=r._options.callbacks.onUploadChunk(n,i,u);return t.isGenericPromise(f)?(r.log(t.format("onUploadChunk for {}.{} returned a Promise - waiting for resolution.",n,u.partIndex)),f):(new t.Promise).success()},onUploadChunkSuccess:function(n,t){r._onUploadChunkSuccess(n,t);r._options.callbacks.onUploadChunkSuccess.apply(r,arguments)},onResume:function(n,t,i,u){return r._options.callbacks.onResume(n,t,i,u)},onAutoRetry:function(){return r._onAutoRetry.apply(r,arguments)},onUuidChanged:function(n,t){r.log("Server requested UUID change from '"+r.getUuid(n)+"' to '"+t+"'");r.setUuid(n,t)},getName:t.bind(r.getName,r),getUuid:t.bind(r.getUuid,r),getSize:t.bind(r.getSize,r),setSize:t.bind(r._setSize,r),getDataByUuid:function(n){return r.getUploads({uuid:n})},isQueued:function(n){var i=r.getUploads({id:n}).status;return i===t.status.QUEUED||i===t.status.SUBMITTED||i===t.status.UPLOAD_RETRYING||i===t.status.PAUSED},getIdsInProxyGroup:r._uploadData.getIdsInProxyGroup,getIdsInBatch:r._uploadData.getIdsInBatch,isInProgress:function(n){return r.getUploads({id:n}).status===t.status.UPLOADING},getCustomResumeData:t.bind(r._getCustomResumeData,r),setStatus:function(n,t){r._uploadData.setStatus(n,t)}};return t.each(this._options.request,function(n,t){f[n]=t}),f.customHeaders=this._customHeadersStore,n&&t.each(n,function(n,t){f[n]=t}),new t.UploadHandlerController(f,i)},_fileOrBlobRejected:function(n){this._netUploadedOrQueued--;this._uploadData.setStatus(n,t.status.REJECTED)},_formatSize:function(n){if(0===n)return n+this._options.text.sizeSymbols[0];var t=-1;do n/=1e3,t++;while(n>999);return Math.max(n,.1).toFixed(1)+this._options.text.sizeSymbols[t]},_generateExtraButtonSpecs:function(){var n=this;this._extraButtonSpecs={};t.each(this._options.extraButtons,function(i,r){var u=r.multiple,e=t.extend({},n._options.validation,!0),f=t.extend({},r);void 0===u&&(u=n._options.multiple);f.validation&&t.extend(e,r.validation,!0);t.extend(f,{multiple:u,validation:e},!0);n._initExtraButton(f)})},_getButton:function(n){var t=this._extraButtonSpecs[n];return t?t.element:n===this._defaultButtonId?this._options.button:void 0},_getButtonId:function(n){var u,r,i=n;if(i instanceof t.BlobProxy&&(i=i.referenceBlob),i&&!t.isBlob(i)){if(t.isFile(i))return i.qqButtonId;if("input"===i.tagName.toLowerCase()&&"file"===i.type.toLowerCase())return i.getAttribute(t.UploadButton.BUTTON_ID_ATTR_NAME);if(u=i.getElementsByTagName("input"),t.each(u,function(n,t){if("file"===t.getAttribute("type"))return r=t,!1}),r)return r.getAttribute(t.UploadButton.BUTTON_ID_ATTR_NAME)}},_getCustomResumeData:function(n){return this._customResumeDataStore.get(n)},_getNotFinished:function(){return this._uploadData.retrieve({status:[t.status.UPLOADING,t.status.UPLOAD_RETRYING,t.status.QUEUED,t.status.SUBMITTING,t.status.SUBMITTED,t.status.PAUSED]}).length},_getValidationBase:function(n){var t=this._extraButtonSpecs[n];return t?t.validation:this._options.validation},_getValidationDescriptor:function(n){return n.file instanceof t.BlobProxy?{name:t.getFilename(n.file.referenceBlob),size:n.file.referenceBlob.size}:{name:this.getUploads({id:n.id}).name,size:this.getUploads({id:n.id}).size}},_getValidationDescriptors:function(n){var r=this,i=[];return t.each(n,function(n,t){i.push(r._getValidationDescriptor(t))}),i},_handleCameraAccess:function(){if(this._options.camera.ios&&t.ios()){var r=this._options.camera.button,i=r?this._getButtonId(r):this._defaultButtonId,n=this._options;i&&i!==this._defaultButtonId&&(n=this._extraButtonSpecs[i]);n.multiple=!1;null===n.validation.acceptFiles?n.validation.acceptFiles="image/*;capture=camera":n.validation.acceptFiles+=",image/*;capture=camera";t.each(this._buttons,function(t,r){if(r.getButtonId()===i)return r.setMultiple(n.multiple),r.setAcceptFiles(n.acceptFiles),!1})}},_handleCheckedCallback:function(n){var r=this,i=n.callback();return t.isGenericPromise(i)?(this.log(n.name+" - waiting for "+n.name+" promise to be fulfilled for "+n.identifier),i.then(function(t){r.log(n.name+" promise success for "+n.identifier);n.onSuccess(t)},function(){n.onFailure?(r.log(n.name+" promise failure for "+n.identifier),n.onFailure()):r.log(n.name+" promise failure for "+n.identifier)})):(i!==!1?n.onSuccess(i):n.onFailure?(this.log(n.name+" - return value was 'false' for "+n.identifier+".  Invoking failure callback."),n.onFailure()):this.log(n.name+" - return value was 'false' for "+n.identifier+".  Will not proceed."),i)},_handleNewFile:function(n,i,r){var u=this,o=t.getUniqueId(),e=-1,s=t.getFilename(n),f=n.blob||n,h=this._customNewFileHandler?this._customNewFileHandler:t.bind(u._handleNewFileGeneric,u);!t.isInput(f)&&f.size>=0&&(e=f.size);h(f,s,o,e,r,i,this._options.request.uuidName,{uploadData:u._uploadData,paramsStore:u._paramsStore,addFileToHandler:function(n,t){u._handler.add(n,t);u._netUploadedOrQueued++;u._trackButton(n)}})},_handleNewFileGeneric:function(n,t,i,r,u,f){var e=this._uploadData.addFile({uuid:i,name:t,size:r,batchId:f,file:n});this._handler.add(e,n);this._trackButton(e);this._netUploadedOrQueued++;u.push({id:e,file:n})},_handlePasteSuccess:function(n,t){var r=n.type.split("/")[1],i=t;null==i&&(i=this._options.paste.defaultName);i+="."+r;this.addFiles({name:i,blob:n})},_handleDeleteSuccess:function(n){if(this.getUploads({id:n}).status!==t.status.DELETED){var i=this.getName(n);this._netUploadedOrQueued--;this._netUploaded--;this._handler.expunge(n);this._uploadData.setStatus(n,t.status.DELETED);this.log("Delete request for '"+i+"' has succeeded.")}},_handleDeleteFailed:function(n,i){var r=this.getName(n);this._uploadData.setStatus(n,t.status.DELETE_FAILED);this.log("Delete request for '"+r+"' has failed.","error");i&&void 0!==i.withCredentials?this._options.callbacks.onError(n,r,"Delete request failed with response code "+i.status,i):this._options.callbacks.onError(n,r,"Delete request failed",i)},_initExtraButton:function(n){var t=this._createUploadButton({accept:n.validation.acceptFiles,allowedExtensions:n.validation.allowedExtensions,element:n.element,folders:n.folders,multiple:n.multiple,title:n.fileInputTitle});this._extraButtonSpecs[t.getButtonId()]=n},_initFormSupportAndParams:function(){this._formSupport=t.FormSupport&&new t.FormSupport(this._options.form,t.bind(this.uploadStoredFiles,this),t.bind(this.log,this));this._formSupport&&this._formSupport.attachedToForm?(this._paramsStore=this._createStore(this._options.request.params,this._formSupport.getFormInputsAsObject),this._options.autoUpload=this._formSupport.newAutoUpload,this._formSupport.newEndpoint&&(this._options.request.endpoint=this._formSupport.newEndpoint)):this._paramsStore=this._createStore(this._options.request.params)},_isDeletePossible:function(){return!(!t.DeleteFileAjaxRequester||!this._options.deleteFile.enabled)&&(!this._options.cors.expected||!!t.supportedFeatures.deleteFileCorsXhr||!(!t.supportedFeatures.deleteFileCorsXdr||!this._options.cors.allowXdr))},_isAllowedExtension:function(n,i){var r=!1;return!n.length||(t.each(n,function(n,u){if(t.isString(u)){var f=new RegExp("\\."+u+"$","i");if(null!=i.match(f))return r=!0,!1}}),r)},_itemError:function(n,i,r){function u(n,t){f=f.replace(n,t)}var s,e,f=this._options.messages[n],h=[],c=[].concat(i),l=c[0],a=this._getButtonId(r),o=this._getValidationBase(a);return t.each(o.allowedExtensions,function(n,i){t.isString(i)&&h.push(i)}),s=h.join(", ").toLowerCase(),u("{file}",this._options.formatFileName(l)),u("{extensions}",s),u("{sizeLimit}",this._formatSize(o.sizeLimit)),u("{minSizeLimit}",this._formatSize(o.minSizeLimit)),e=f.match(/(\{\w+\})/g),null!==e&&t.each(e,function(n,t){u(t,c[n])}),this._options.callbacks.onError(null,l,f,void 0),f},_manualRetry:function(n,i){if(this._onBeforeManualRetry(n))return this._netUploadedOrQueued++,this._uploadData.setStatus(n,t.status.UPLOAD_RETRYING),i?i(n):this._handler.retry(n),!0},_maybeAllComplete:function(n,i){var r=this,u=this._getNotFinished();i===t.status.UPLOAD_SUCCESSFUL?this._succeededSinceLastAllComplete.push(n):i===t.status.UPLOAD_FAILED&&this._failedSinceLastAllComplete.push(n);0===u&&(this._succeededSinceLastAllComplete.length||this._failedSinceLastAllComplete.length)&&setTimeout(function(){r._onAllComplete(r._succeededSinceLastAllComplete,r._failedSinceLastAllComplete)},0)},_maybeHandleIos8SafariWorkaround:function(){var n=this;if(this._options.workarounds.ios8SafariUploads&&t.ios800()&&t.iosSafari())throw setTimeout(function(){window.alert(n._options.messages.unsupportedBrowserIos8Safari)},0),new t.Error(this._options.messages.unsupportedBrowserIos8Safari);},_maybeParseAndSendUploadError:function(n,t,i,r){if(!i.success)if(r&&200!==r.status&&!i.error)this._options.callbacks.onError(n,t,"XHR returned response code "+r.status,r);else{var u=i.error?i.error:this._options.text.defaultResponseError;this._options.callbacks.onError(n,t,u,r)}},_maybeProcessNextItemAfterOnValidateCallback:function(n,i,r,u,f){var e=this;if(i.length>r)if(n||!this._options.validation.stopOnFirstInvalidFile)setTimeout(function(){var n=e._getValidationDescriptor(i[r]),o=e._getButtonId(i[r].file),s=e._getButton(o);e._handleCheckedCallback({name:"onValidate",callback:t.bind(e._options.callbacks.onValidate,e,n,s),onSuccess:t.bind(e._onValidateCallbackSuccess,e,i,r,u,f),onFailure:t.bind(e._onValidateCallbackFailure,e,i,r,u,f),identifier:"Item '"+n.name+"', size: "+n.size})},0);else if(!n)for(;r<i.length;r++)e._fileOrBlobRejected(i[r].id)},_onAllComplete:function(n,i){this._totalProgress&&this._totalProgress.onAllComplete(n,i,this._preventRetries);this._options.callbacks.onAllComplete(t.extend([],n),t.extend([],i));this._succeededSinceLastAllComplete=[];this._failedSinceLastAllComplete=[]},_onAutoRetry:function(n,i,r,u,f){var e=this,o;if(e._preventRetries[n]=r[e._options.retry.preventRetryResponseProperty],e._shouldAutoRetry(n))return o=1e3*e._options.retry.autoAttemptDelay,e._maybeParseAndSendUploadError.apply(e,arguments),e._options.callbacks.onAutoRetry(n,i,e._autoRetries[n]),e._onBeforeAutoRetry(n,i),e._uploadData.setStatus(n,t.status.UPLOAD_RETRYING),e._retryTimeouts[n]=setTimeout(function(){e.log("Starting retry for "+i+"...");f?f(n):e._handler.retry(n)},o),!0},_onBeforeAutoRetry:function(n,t){this.log("Waiting "+this._options.retry.autoAttemptDelay+" seconds before retrying "+t+"...")},_onBeforeManualRetry:function(n){var t,i=this._currentItemLimit;return this._preventRetries[n]?(this.log("Retries are forbidden for id "+n,"warn"),!1):this._handler.isValid(n)?(t=this.getName(n),this._options.callbacks.onManualRetry(n,t)!==!1&&(i>0&&this._netUploadedOrQueued+1>i?(this._itemError("retryFailTooManyItems"),!1):(this.log("Retrying upload for '"+t+"' (id: "+n+")..."),!0))):(this.log("'"+n+"' is not a valid file ID","error"),!1)},_onCancel:function(n){this._netUploadedOrQueued--;clearTimeout(this._retryTimeouts[n]);var i=t.indexOf(this._storedIds,n);!this._options.autoUpload&&i>=0&&this._storedIds.splice(i,1);this._uploadData.setStatus(n,t.status.CANCELED)},_onComplete:function(n,i,r,u){return r.success?(r.thumbnailUrl&&(this._thumbnailUrls[n]=r.thumbnailUrl),this._netUploaded++,this._uploadData.setStatus(n,t.status.UPLOAD_SUCCESSFUL)):(this._netUploadedOrQueued--,this._uploadData.setStatus(n,t.status.UPLOAD_FAILED),r[this._options.retry.preventRetryResponseProperty]===!0&&(this._preventRetries[n]=!0)),this._maybeParseAndSendUploadError(n,i,r,u),!!r.success},_onDelete:function(n){this._uploadData.setStatus(n,t.status.DELETING)},_onDeleteComplete:function(n,t,i){this.getName(n);i?this._handleDeleteFailed(n,t):this._handleDeleteSuccess(n)},_onInputChange:function(n){var i;if(t.supportedFeatures.ajaxUploading){for(i=0;i<n.files.length;i++)this._annotateWithButtonId(n.files[i],n);this.addFiles(n.files)}else n.value.length>0&&this.addFiles(n);t.each(this._buttons,function(n,t){t.reset()})},_onProgress:function(n,t,i,r){this._totalProgress&&this._totalProgress.onIndividualProgress(n,i,r)},_onSubmit:function(){},_onSubmitCallbackSuccess:function(n){this._onSubmit.apply(this,arguments);this._uploadData.setStatus(n,t.status.SUBMITTED);this._onSubmitted.apply(this,arguments);this._options.autoUpload?(this._options.callbacks.onSubmitted.apply(this,arguments),this._uploadFile(n)):(this._storeForLater(n),this._options.callbacks.onSubmitted.apply(this,arguments))},_onSubmitDelete:function(n,i,r){var u,f=this.getUuid(n);return i&&(u=t.bind(i,this,n,f,r)),this._isDeletePossible()?(this._handleCheckedCallback({name:"onSubmitDelete",callback:t.bind(this._options.callbacks.onSubmitDelete,this,n),onSuccess:u||t.bind(this._deleteHandler.sendDelete,this,n,f,r),identifier:n}),!0):(this.log("Delete request ignored for ID "+n+", delete feature is disabled or request not possible due to CORS on a user agent that does not support pre-flighting.","warn"),!1)},_onSubmitted:function(){},_onTotalProgress:function(n,t){this._options.callbacks.onTotalProgress(n,t)},_onUploadPrep:function(){},_onUpload:function(n){this._uploadData.setStatus(n,t.status.UPLOADING)},_onUploadChunk:function(){},_onUploadChunkSuccess:function(n){!this._preventRetries[n]&&this._options.retry.enableAuto&&(this._autoRetries[n]=0)},_onUploadStatusChange:function(n,i,r){r===t.status.PAUSED&&clearTimeout(this._retryTimeouts[n])},_onValidateBatchCallbackFailure:function(n){var i=this;t.each(n,function(n,t){i._fileOrBlobRejected(t.id)})},_onValidateBatchCallbackSuccess:function(n,i,r,u,f){var o,e=this._currentItemLimit,s=this._netUploadedOrQueued;0===e||s<=e?i.length>0?this._handleCheckedCallback({name:"onValidate",callback:t.bind(this._options.callbacks.onValidate,this,n[0],f),onSuccess:t.bind(this._onValidateCallbackSuccess,this,i,0,r,u),onFailure:t.bind(this._onValidateCallbackFailure,this,i,0,r,u),identifier:"Item '"+i[0].file.name+"', size: "+i[0].file.size}):this._itemError("noFilesError"):(this._onValidateBatchCallbackFailure(i),o=this._options.messages.tooManyItemsError.replace(/\{netItems\}/g,s).replace(/\{itemLimit\}/g,e),this._batchError(o))},_onValidateCallbackFailure:function(n,t,i,r){var u=t+1;this._fileOrBlobRejected(n[t].id,n[t].file.name);this._maybeProcessNextItemAfterOnValidateCallback(!1,n,u,i,r)},_onValidateCallbackSuccess:function(n,t,i,r){var u=this,f=t+1,e=this._getValidationDescriptor(n[t]);this._validateFileOrBlobData(n[t],e).then(function(){u._upload(n[t].id,i,r);u._maybeProcessNextItemAfterOnValidateCallback(!0,n,f,i,r)},function(){u._maybeProcessNextItemAfterOnValidateCallback(!1,n,f,i,r)})},_prepareItemsForUpload:function(n,i,r){if(0===n.length)return void this._itemError("noFilesError");var u=this._getValidationDescriptors(n),e=this._getButtonId(n[0].file),f=this._getButton(e);this._handleCheckedCallback({name:"onValidateBatch",callback:t.bind(this._options.callbacks.onValidateBatch,this,u,f),onSuccess:t.bind(this._onValidateBatchCallbackSuccess,this,u,n,i,r,f),onFailure:t.bind(this._onValidateBatchCallbackFailure,this,n),identifier:"batch validation"})},_preventLeaveInProgress:function(){var n=this;this._disposeSupport.attach(window,"beforeunload",function(t){if(n.getInProgress())return t=t||window.event,t.returnValue=n._options.messages.onLeave,n._options.messages.onLeave})},_refreshSessionData:function(){var n=this,i=this._options.session;t.Session&&null!=this._options.session.endpoint&&(this._session||(t.extend(i,{cors:this._options.cors}),i.log=t.bind(this.log,this),i.addFileRecord=t.bind(this._addCannedFile,this),this._session=new t.Session(i)),setTimeout(function(){n._session.refresh().then(function(t,i){n._sessionRequestComplete();n._options.callbacks.onSessionRequestComplete(t,!0,i)},function(t,i){n._options.callbacks.onSessionRequestComplete(t,!1,i)})},0))},_sessionRequestComplete:function(){},_setSize:function(n,t){this._uploadData.updateSize(n,t);this._totalProgress&&this._totalProgress.onNewSize(n)},_shouldAutoRetry:function(n){var i=this._uploadData.retrieve({id:n});return!!(!this._preventRetries[n]&&this._options.retry.enableAuto&&i.status!==t.status.PAUSED&&(void 0===this._autoRetries[n]&&(this._autoRetries[n]=0),this._autoRetries[n]<this._options.retry.maxAutoAttempts))&&(this._autoRetries[n]+=1,!0)},_storeForLater:function(n){this._storedIds.push(n)},_trackButton:function(n){var i;i=t.supportedFeatures.ajaxUploading?this._handler.getFile(n).qqButtonId:this._getButtonId(this._handler.getInput(n));i&&(this._buttonIdsForFileIds[n]=i)},_updateFormSupportAndParams:function(n){this._options.form.element=n;this._formSupport=t.FormSupport&&new t.FormSupport(this._options.form,t.bind(this.uploadStoredFiles,this),t.bind(this.log,this));this._formSupport&&this._formSupport.attachedToForm&&(this._paramsStore.addReadOnly(null,this._formSupport.getFormInputsAsObject),this._options.autoUpload=this._formSupport.newAutoUpload,this._formSupport.newEndpoint&&this.setEndpoint(this._formSupport.newEndpoint))},_upload:function(n,i,r){var u=this.getName(n);i&&this.setParams(i,n);r&&this.setEndpoint(r,n);this._handleCheckedCallback({name:"onSubmit",callback:t.bind(this._options.callbacks.onSubmit,this,n,u),onSuccess:t.bind(this._onSubmitCallbackSuccess,this,n,u),onFailure:t.bind(this._fileOrBlobRejected,this,n,u),identifier:n})},_uploadFile:function(n){this._handler.upload(n)||this._uploadData.setStatus(n,t.status.QUEUED)},_uploadStoredFiles:function(){for(var i,n,r=this;this._storedIds.length;)i=this._storedIds.shift(),this._uploadFile(i);n=this.getUploads({status:t.status.SUBMITTING}).length;n&&(t.log("Still waiting for "+n+" files to clear submit queue. Will re-parse stored IDs array shortly."),setTimeout(function(){r._uploadStoredFiles()},1e3))},_validateFileOrBlobData:function(n,i){var s=this,u=function(){return n.file instanceof t.BlobProxy?n.file.referenceBlob:n.file}(),f=i.name,e=i.size,h=this._getButtonId(n.file),o=this._getValidationBase(h),r=new t.Promise;return r.then(function(){},function(){s._fileOrBlobRejected(n.id,f)}),t.isFileOrInput(u)&&!this._isAllowedExtension(o.allowedExtensions,f)?(this._itemError("typeError",f,u),r.failure()):this._options.validation.allowEmpty||0!==e?e>0&&o.sizeLimit&&e>o.sizeLimit?(this._itemError("sizeError",f,u),r.failure()):e>0&&e<o.minSizeLimit?(this._itemError("minSizeError",f,u),r.failure()):(t.ImageValidation&&t.supportedFeatures.imagePreviews&&t.isFile(u)?new t.ImageValidation(u,t.bind(s.log,s)).validate(o.image).then(r.success,function(n){s._itemError(n+"ImageError",f,u);r.failure()}):r.success(),r):(this._itemError("emptyError",f,u),r.failure())},_wrapCallbacks:function(){var n,t,i;n=this;t=function(t,i,r){var u;try{return i.apply(n,r)}catch(i){u=i.message||i.toString();n.log("Caught exception in '"+t+"' callback - "+u,"error")}};for(i in this._options.callbacks)!function(){var r,u;r=i;u=n._options.callbacks[r];n._options.callbacks[r]=function(){return t(r,u,arguments)}}()}}}(),function(){"use strict";t.FineUploaderBasic=function(n){var i=this;this._options={debug:!1,button:null,multiple:!0,maxConnections:3,disableCancelForFormUploads:!1,autoUpload:!0,warnBeforeUnload:!0,request:{customHeaders:{},endpoint:"/server/upload",filenameParam:"qqfilename",forceMultipart:!0,inputName:"qqfile",method:"POST",omitDefaultParams:!1,params:{},paramsInBody:!0,requireSuccessJson:!0,totalFileSizeName:"qqtotalfilesize",uuidName:"qquuid"},validation:{allowedExtensions:[],sizeLimit:0,minSizeLimit:0,itemLimit:0,stopOnFirstInvalidFile:!0,acceptFiles:null,image:{maxHeight:0,maxWidth:0,minHeight:0,minWidth:0},allowEmpty:!1},callbacks:{onSubmit:function(){},onSubmitted:function(){},onComplete:function(){},onAllComplete:function(){},onCancel:function(){},onUpload:function(){},onUploadChunk:function(){},onUploadChunkSuccess:function(){},onResume:function(){},onProgress:function(){},onTotalProgress:function(){},onError:function(){},onAutoRetry:function(){},onManualRetry:function(){},onValidateBatch:function(){},onValidate:function(){},onSubmitDelete:function(){},onDelete:function(){},onDeleteComplete:function(){},onPasteReceived:function(){},onStatusChange:function(){},onSessionRequestComplete:function(){}},messages:{typeError:"{file} has an invalid extension. Valid extension(s): {extensions}.",sizeError:"{file} is too large, maximum file size is {sizeLimit}.",minSizeError:"{file} is too small, minimum file size is {minSizeLimit}.",emptyError:"{file} is empty, please select files again without it.",noFilesError:"No files to upload.",tooManyItemsError:"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.",maxHeightImageError:"Image is too tall.",maxWidthImageError:"Image is too wide.",minHeightImageError:"Image is not tall enough.",minWidthImageError:"Image is not wide enough.",retryFailTooManyItems:"Retry failed - you have reached your file limit.",onLeave:"The files are being uploaded, if you leave now the upload will be canceled.",unsupportedBrowserIos8Safari:"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues."},retry:{enableAuto:!1,maxAutoAttempts:3,autoAttemptDelay:5,preventRetryResponseProperty:"preventRetry"},classes:{buttonHover:"qq-upload-button-hover",buttonFocus:"qq-upload-button-focus"},chunking:{enabled:!1,concurrent:{enabled:!1},mandatory:!1,paramNames:{partIndex:"qqpartindex",partByteOffset:"qqpartbyteoffset",chunkSize:"qqchunksize",totalFileSize:"qqtotalfilesize",totalParts:"qqtotalparts"},partSize:function(){return 2e6},success:{endpoint:null,headers:function(){return null},jsonPayload:!1,method:"POST",params:function(){return null},resetOnStatus:[]}},resume:{enabled:!1,recordsExpireIn:7,paramNames:{resuming:"qqresume"},customKeys:function(){return[]}},formatFileName:function(n){return n},text:{defaultResponseError:"Upload failure reason unknown",fileInputTitle:"file input",sizeSymbols:["kB","MB","GB","TB","PB","EB"]},deleteFile:{enabled:!1,method:"DELETE",endpoint:"/server/upload",customHeaders:{},params:{}},cors:{expected:!1,sendCredentials:!1,allowXdr:!1},blobs:{defaultName:"misc_data"},paste:{targetElement:null,defaultName:"pasted_image"},camera:{ios:!1,button:null},extraButtons:[],session:{endpoint:null,params:{},customHeaders:{},refreshOnReset:!0},form:{element:"qq-form",autoUpload:!1,interceptSubmit:!0},scaling:{customResizer:null,sendOriginal:!0,orient:!0,defaultType:null,defaultQuality:80,failureText:"Failed to scale",includeExif:!1,sizes:[]},workarounds:{iosEmptyVideos:!0,ios8SafariUploads:!0,ios8BrowserCrash:!1}};t.extend(this._options,n,!0);this._buttons=[];this._extraButtonSpecs={};this._buttonIdsForFileIds=[];this._wrapCallbacks();this._disposeSupport=new t.DisposeSupport;this._storedIds=[];this._autoRetries=[];this._retryTimeouts=[];this._preventRetries=[];this._thumbnailUrls=[];this._netUploadedOrQueued=0;this._netUploaded=0;this._uploadData=this._createUploadDataTracker();this._initFormSupportAndParams();this._customHeadersStore=this._createStore(this._options.request.customHeaders);this._deleteFileCustomHeadersStore=this._createStore(this._options.deleteFile.customHeaders);this._deleteFileParamsStore=this._createStore(this._options.deleteFile.params);this._endpointStore=this._createStore(this._options.request.endpoint);this._deleteFileEndpointStore=this._createStore(this._options.deleteFile.endpoint);this._handler=this._createUploadHandler();this._deleteHandler=t.DeleteFileAjaxRequester&&this._createDeleteHandler();this._options.button&&(this._defaultButtonId=this._createUploadButton({element:this._options.button,title:this._options.text.fileInputTitle}).getButtonId());this._generateExtraButtonSpecs();this._handleCameraAccess();this._options.paste.targetElement&&(t.PasteSupport?this._pasteHandler=this._createPasteHandler():this.log("Paste support module not found","error"));this._options.warnBeforeUnload&&this._preventLeaveInProgress();this._imageGenerator=t.ImageGenerator&&new t.ImageGenerator(t.bind(this.log,this));this._refreshSessionData();this._succeededSinceLastAllComplete=[];this._failedSinceLastAllComplete=[];this._scaler=t.Scaler&&new t.Scaler(this._options.scaling,t.bind(this.log,this))||{};this._scaler.enabled&&(this._customNewFileHandler=t.bind(this._scaler.handleNewFile,this._scaler));t.TotalProgress&&t.supportedFeatures.progressBar&&(this._totalProgress=new t.TotalProgress(t.bind(this._onTotalProgress,this),function(n){var t=i._uploadData.retrieve({id:n});return t&&t.size||0}));this._currentItemLimit=this._options.validation.itemLimit;this._customResumeDataStore=this._createStore()};t.FineUploaderBasic.prototype=t.basePublicApi;t.extend(t.FineUploaderBasic.prototype,t.basePrivateApi)}();t.AjaxRequester=function(n){"use strict";function a(){return t.indexOf(["GET","POST","HEAD"],i.method)>=0}function v(){var n=!1;return t.each(n,function(i,r){if(t.indexOf(["Accept","Accept-Language","Content-Language","Content-Type"],r)<0)return n=!0,!1}),n}function e(n){return i.cors.expected&&void 0===n.withCredentials}function y(){var n;return(window.XMLHttpRequest||window.ActiveXObject)&&(n=t.createXhrInstance(),void 0===n.withCredentials&&(n=new XDomainRequest,n.onload=function(){},n.onerror=function(){},n.ontimeout=function(){},n.onprogress=function(){})),n}function u(n,u){var f=r[n]&&r[n].xhr;return f||(f=u?u:i.cors.expected?y():t.createXhrInstance(),r[n].xhr=f),f}function c(n){var e,o=t.indexOf(f,n),u=i.maxConnections;delete r[n];f.splice(o,1);f.length>=u&&o<u&&(e=f[u-1],l(e))}function s(n,t){var r=u(n),s=i.method,f=t===!0;c(n);f?o(s+" request for "+n+" has failed","error"):e(r)||tt(r.status)||(f=!0,o(s+" request for "+n+" has failed - response code "+r.status,"error"));i.onComplete(n,r,f)}function p(n){var u,f=r[n].additionalParams,e=i.mandatedParams;return i.paramsStore.get&&(u=i.paramsStore.get(n)),f&&t.each(f,function(n,t){u=u||{};u[n]=t}),e&&t.each(e,function(n,t){u=u||{};u[n]=t}),u}function l(n,f){var l,s=u(n,f),a=i.method,c=p(n),v=r[n].payload;return i.onSend(n),l=w(n,c,r[n].additionalQueryParams),e(s)?(s.onload=d(n),s.onerror=g(n)):s.onreadystatechange=b(n),k(n),s.open(a,l,!0),i.cors.expected&&i.cors.sendCredentials&&!e(s)&&(s.withCredentials=!0),nt(n),o("Sending "+a+" request for "+n),v?s.send(v):h||!c?s.send():c&&i.contentType&&i.contentType.toLowerCase().indexOf("application/x-www-form-urlencoded")>=0?s.send(t.obj2url(c,"")):c&&i.contentType&&i.contentType.toLowerCase().indexOf("application/json")>=0?s.send(JSON.stringify(c)):s.send(c),s}function w(n,u,f){var e=i.endpointStore.get(n),o=r[n].addToPath;return void 0!=o&&(e+="/"+o),h&&u&&(e=t.obj2url(u,e)),f&&(e=t.obj2url(f,e)),e}function b(n){return function(){4===u(n).readyState&&s(n)}}function k(n){var t=i.onProgress;t&&(u(n).upload.onprogress=function(i){i.lengthComputable&&t(n,i.loaded,i.total)})}function d(n){return function(){s(n)}}function g(n){return function(){s(n,!0)}}function nt(n){var f=u(n),o=i.customHeaders,c=r[n].additionalHeaders||{},h=i.method,s={};e(f)||(i.acceptHeader&&f.setRequestHeader("Accept",i.acceptHeader),i.allowXRequestedWithAndCacheControl&&(i.cors.expected&&a()&&!v(o)||(f.setRequestHeader("X-Requested-With","XMLHttpRequest"),f.setRequestHeader("Cache-Control","no-cache"))),!i.contentType||"POST"!==h&&"PUT"!==h||f.setRequestHeader("Content-Type",i.contentType),t.extend(s,t.isFunction(o)?o(n):o),t.extend(s,c),t.each(s,function(n,t){f.setRequestHeader(n,t)}))}function tt(n){return t.indexOf(i.successfulResponseCodes[i.method],n)>=0}function it(n,t,u,e,o,s,h){if(r[n]={addToPath:u,additionalParams:e,additionalQueryParams:o,additionalHeaders:s,payload:h},f.push(n)<=i.maxConnections)return l(n,t)}var o,h,f=[],r={},i={acceptHeader:null,validMethods:["PATCH","POST","PUT"],method:"POST",contentType:"application/x-www-form-urlencoded",maxConnections:3,customHeaders:{},endpointStore:{},paramsStore:{},mandatedParams:{},allowXRequestedWithAndCacheControl:!0,successfulResponseCodes:{DELETE:[200,202,204],PATCH:[200,201,202,203,204],POST:[200,201,202,203,204],PUT:[200,201,202,203,204],GET:[200]},cors:{expected:!1,sendCredentials:!1},log:function(){},onSend:function(){},onComplete:function(){},onProgress:null};if(t.extend(i,n),o=i.log,t.indexOf(i.validMethods,i.method)<0)throw new Error("'"+i.method+"' is not a supported method for this type of request!");h="GET"===i.method||"DELETE"===i.method;t.extend(this,{initTransport:function(n){var u,r,f,e,o,s;return{withPath:function(n){return u=n,this},withParams:function(n){return r=n,this},withQueryParams:function(n){return s=n,this},withHeaders:function(n){return f=n,this},withPayload:function(n){return e=n,this},withCacheBuster:function(){return o=!0,this},send:function(h){return o&&t.indexOf(["GET","DELETE"],i.method)>=0&&(r.qqtimestamp=(new Date).getTime()),it(n,h,u,r,s,f,e)}}},canceled:function(n){c(n)}})};t.UploadHandler=function(n){"use strict";var r=n.proxy,i={},u=r.onCancel,f=r.getName;t.extend(this,{add:function(n,t){i[n]=t;i[n].temp={}},cancel:function(n){var r=this,e=new t.Promise;u(n,f(n),e).then(function(){r.isValid(n)&&(i[n].canceled=!0,r.expunge(n));e.success()})},expunge:function(n){delete i[n]},getThirdPartyFileId:function(n){return i[n].key},isValid:function(n){return void 0!==i[n]},reset:function(){i={}},_getFileState:function(n){return i[n]},_setThirdPartyFileId:function(n,t){i[n].key=t},_wasCanceled:function(n){return!!i[n].canceled}})};t.UploadHandlerController=function(n,i){"use strict";var a,o,r,h=this,l=!1,c=!1,u={paramsStore:{},maxConnections:3,chunking:{enabled:!1,multiple:{enabled:!1}},log:function(){},onProgress:function(){},onComplete:function(){},onCancel:function(){},onUploadPrep:function(){},onUpload:function(){},onUploadChunk:function(){},onUploadChunkSuccess:function(){},onAutoRetry:function(){},onResume:function(){},onUuidChanged:function(){},getName:function(){},setSize:function(){},isQueued:function(){},getIdsInProxyGroup:function(){},getIdsInBatch:function(){},isInProgress:function(){}},s={done:function(n,t,i,f){var e=r._getChunkData(n,t);r._getFileState(n).attemptingResume=!1;delete r._getFileState(n).temp.chunkProgress[t];r._getFileState(n).loaded+=e.size;u.onUploadChunkSuccess(n,r._getChunkDataForCallback(e),i,f)},finalize:function(n){var t=u.getSize(n),i=u.getName(n);o("All chunks have been uploaded for "+n+" - finalizing....");r.finalizeChunks(n).then(function(f,s){o("Finalize successful for "+n);var h=e.normalizeResponse(f,!0);u.onProgress(n,i,t,t);r._maybeDeletePersistedChunkData(n);e.cleanup(n,h,s)},function(t,r){var f=e.normalizeResponse(t,!1);o("Problem finalizing chunks for file ID "+n+" - "+f.error,"error");(f.reset||r&&u.chunking.success.resetOnStatus.indexOf(r.status)>=0)&&s.reset(n);u.onAutoRetry(n,i,f,r)||e.cleanup(n,f,r)})},handleFailure:function(n,i,h,l){var p=u.getName(i),v,a,y;o("Chunked upload request failed for "+i+", chunk "+n);r.clearCachedChunk(i,n);a=e.normalizeResponse(h,!1);a.reset?s.reset(i):(y=r._getFileState(i).chunking.inProgress,v=y?t.indexOf(y,n):-1,v>=0&&(r._getFileState(i).chunking.inProgress.splice(v,1),r._getFileState(i).chunking.remaining.unshift(n)));r._getFileState(i).temp.ignoreFailure||(c&&(r._getFileState(i).temp.ignoreFailure=!0,o(t.format("Going to attempt to abort these chunks: {}. These are currently in-progress: {}.",JSON.stringify(Object.keys(r._getXhrs(i))),JSON.stringify(r._getFileState(i).chunking.inProgress))),t.each(r._getXhrs(i),function(n,r){o(t.format("Attempting to abort file {}.{}. XHR readyState {}. ",i,n,r.readyState));r.abort();r._cancelled=!0}),r.moveInProgressToRemaining(i),f.free(i,!0)),u.onAutoRetry(i,p,a,l)||e.cleanup(i,a,l))},hasMoreParts:function(n){return!!r._getFileState(n).chunking.remaining.length},nextPart:function(n){var t=r._getFileState(n).chunking.remaining.shift();return t>=r._getTotalChunks(n)&&(t=null),t},reset:function(n){o("Server or callback has ordered chunking effort to be restarted on next attempt for item ID "+n,"error");r._maybeDeletePersistedChunkData(n);r.reevaluateChunking(n);r._getFileState(n).loaded=0;r._getFileState(n).attemptingResume=!1},sendNext:function(n){var p=u.getSize(n),y=u.getName(n),i=s.nextPart(n),h=r._getChunkData(n,i),l=r._getFileState(n),a=l.attemptingResume,v=l.chunking.inProgress||[];(null==l.loaded&&(l.loaded=0),a&&u.onResume(n,y,h,l.customResumeData)===!1&&(s.reset(n),i=s.nextPart(n),h=r._getChunkData(n,i),a=!1),null==i&&0===v.length)?s.finalize(n):(v.push(i),r._getFileState(n).chunking.inProgress=v,c&&f.open(n,i),c&&f.available()&&r._getFileState(n).chunking.remaining.length&&s.sendNext(n),0===h.blob.size&&(o(t.format("Chunk {} for file {} will not be uploaded, zero sized chunk.",i,n),"error"),s.handleFailure(i,n,"File is no longer available",null)),u.onUploadChunk(n,y,r._getChunkDataForCallback(h)).then(function(f){if(u.isInProgress(n)){o(t.format("Sending chunked upload request for item {}.{}, bytes {}-{} of {}.",n,i,h.start+1,h.end,p));var c={chunkIdx:i,id:n,overrides:f,resuming:a};r.uploadChunk(c).then(function(u,f){o("Chunked upload request succeeded for "+n+", chunk "+i);r.clearCachedChunk(n,i);var h=r._getFileState(n).chunking.inProgress||[],l=e.normalizeResponse(u,!0),c=t.indexOf(h,i);o(t.format("Chunk {} for file {} uploaded successfully.",i,n));s.done(n,i,l,f);c>=0&&h.splice(c,1);r._maybePersistChunkedState(n);s.hasMoreParts(n)||0!==h.length?s.hasMoreParts(n)?s.sendNext(n):o(t.format("File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}",n,JSON.stringify(h))):s.finalize(n)},function(t,r){s.handleFailure(i,n,t,r)}).done(function(){r.clearXhr(n,i)})}else o(t.format("Not sending chunked upload request for item {}.{} - no longer in progress.",n,i))},function(t){s.handleFailure(i,n,t,null)}))}},f={_open:[],_openChunks:{},_waiting:[],available:function(){var r=u.maxConnections,n=0,i=0;return t.each(f._openChunks,function(t,r){n++;i+=r.length}),r-(f._open.length-n+i)},free:function(n,i){var u,c=!i,s=t.indexOf(f._waiting,n),h=t.indexOf(f._open,n);delete f._openChunks[n];e.getProxyOrBlob(n)instanceof t.BlobProxy&&(o("Generated blob upload has ended for "+n+", disposing generated blob."),delete r._getFileState(n).file);s>=0?f._waiting.splice(s,1):c&&h>=0&&(f._open.splice(h,1),u=f._waiting.shift(),u>=0&&(f._open.push(u),e.start(u)))},getWaitingOrConnected:function(){var n=[];return t.each(f._openChunks,function(t,i){i&&i.length&&n.push(parseInt(t))}),t.each(f._open,function(t,i){f._openChunks[i]||n.push(parseInt(i))}),n=n.concat(f._waiting)},isUsingConnection:function(n){return t.indexOf(f._open,n)>=0},open:function(n,t){return null==t&&f._waiting.push(n),!!f.available()&&(null==t?(f._waiting.pop(),f._open.push(n)):function(){var i=f._openChunks[n]||[];i.push(t);f._openChunks[n]=i}(),!0)},reset:function(){f._waiting=[];f._open=[]}},v={send:function(n,t){var i=r._getFileState(n);if(!i)return void o("Ignoring send request as this upload may have been cancelled, File ID "+n,"warn");i.loaded=0;o("Sending simple upload request for "+n);r.uploadFile(n).then(function(i,r){o("Simple upload request succeeded for "+n);var f=e.normalizeResponse(i,!0),s=u.getSize(n);u.onProgress(n,t,s,s);e.maybeNewUuid(n,f);e.cleanup(n,f,r)},function(i,r){o("Simple upload request failed for "+n);var f=e.normalizeResponse(i,!1);u.onAutoRetry(n,t,f,r)||e.cleanup(n,f,r)})}},e={cancel:function(n){o("Cancelling "+n);u.paramsStore.remove(n);f.free(n)},cleanup:function(n,t,i){var e=u.getName(n);u.onComplete(n,e,t,i);r._getFileState(n)&&r._clearXhrs&&r._clearXhrs(n);f.free(n)},getProxyOrBlob:function(n){return r.getProxy&&r.getProxy(n)||r.getFile&&r.getFile(n)},initHandler:function(){r=new(i?t[i]:t.traditional)[(t.supportedFeatures.ajaxUploading?"Xhr":"Form")+"UploadHandler"](u,{getCustomResumeData:u.getCustomResumeData,getDataByUuid:u.getDataByUuid,getName:u.getName,getSize:u.getSize,getUuid:u.getUuid,log:o,onCancel:u.onCancel,onProgress:u.onProgress,onUuidChanged:u.onUuidChanged,onFinalizing:function(n){u.setStatus(n,t.status.UPLOAD_FINALIZING)}});r._removeExpiredChunkingRecords&&r._removeExpiredChunkingRecords()},isDeferredEligibleForUpload:function(n){return u.isQueued(n)},maybeDefer:function(n,i){return i&&!r.getFile(n)&&i instanceof t.BlobProxy?(u.onUploadPrep(n),o("Attempting to generate a blob on-demand for "+n),i.create().then(function(t){o("Generated an on-demand blob for "+n);r.updateBlob(n,t);u.setSize(n,t.size);r.reevaluateChunking(n);e.maybeSendDeferredFiles(n)},function(i){var r={};i&&(r.error=i);o(t.format("Failed to generate blob for ID {}.  Error message: {}.",n,i),"error");u.onComplete(n,u.getName(n),t.extend(r,a),null);e.maybeSendDeferredFiles(n);f.free(n)}),!1):e.maybeSendDeferredFiles(n)},maybeSendDeferredFiles:function(n){var i=u.getIdsInProxyGroup(n),f=!1;return i&&i.length?(o("Maybe ready to upload proxy group file "+n),t.each(i,function(t,i){if(e.isDeferredEligibleForUpload(i)&&r.getFile(i))f=i===n,e.now(i);else if(e.isDeferredEligibleForUpload(i))return!1})):(f=!0,e.now(n)),f},maybeNewUuid:function(n,t){void 0!==t.newUuid&&u.onUuidChanged(n,t.newUuid)},normalizeResponse:function(n,i){var r=n;return t.isObject(n)||(r={},t.isString(n)&&!i&&(r.error=n)),r.success=i,r},now:function(n){var i=u.getName(n);if(!h.isValid(n))throw new t.Error(n+" is not a valid file ID to upload!");u.onUpload(n,i).then(function(e){e&&e.pause?(u.setStatus(n,t.status.PAUSED),r.pause(n),f.free(n)):l&&r._shouldChunkThisFile(n)?s.sendNext(n):v.send(n,i)},function(t){if(t=t||{},o(n+" upload start aborted due to rejected onUpload Promise - details: "+t,"error"),!u.onAutoRetry(n,i,t.responseJSON||{})){var r=e.normalizeResponse(t.responseJSON,!1);e.cleanup(n,r)}})},start:function(n){var t=e.getProxyOrBlob(n);return t?e.maybeDefer(n,t):(e.now(n),!0)}};t.extend(this,{add:function(){r.add.apply(this,arguments)},upload:function(n){return!!f.open(n)&&e.start(n)},retry:function(n){return c&&(r._getFileState(n).temp.ignoreFailure=!1),f.isUsingConnection(n)?e.start(n):h.upload(n)},cancel:function(n){var i=r.cancel(n);t.isGenericPromise(i)?i.then(function(){e.cancel(n)}):i!==!1&&e.cancel(n)},cancelAll:function(){var n,t=f.getWaitingOrConnected();if(t.length)for(n=t.length-1;n>=0;n--)h.cancel(t[n]);f.reset()},getFile:function(n){return r.getProxy&&r.getProxy(n)?r.getProxy(n).referenceBlob:r.getFile&&r.getFile(n)},isProxied:function(n){return!(!r.getProxy||!r.getProxy(n))},getInput:function(n){if(r.getInput)return r.getInput(n)},reset:function(){o("Resetting upload handler");h.cancelAll();f.reset();r.reset()},expunge:function(n){if(h.isValid(n))return r.expunge(n)},isValid:function(n){return r.isValid(n)},hasResumeRecord:function(n){var t=r.isValid(n)&&r._getLocalStorageId&&r._getLocalStorageId(n);return!!t&&!!localStorage.getItem(t)},getResumableFilesData:function(){return r.getResumableFilesData?r.getResumableFilesData():[]},getThirdPartyFileId:function(n){if(h.isValid(n))return r.getThirdPartyFileId(n)},pause:function(n){return!!(h.isResumable(n)&&r.pause&&h.isValid(n)&&r.pause(n))&&(f.free(n),r.moveInProgressToRemaining(n),!0)},isAttemptingResume:function(n){return!!r.isAttemptingResume&&r.isAttemptingResume(n)},isResumable:function(n){return!!r.isResumable&&r.isResumable(n)}});t.extend(u,n);o=u.log;l=u.chunking.enabled&&t.supportedFeatures.chunking;c=l&&u.chunking.concurrent.enabled;a=function(){var n={};return n[u.preventRetryParam]=!0,n}();e.initHandler()};t.WindowReceiveMessage=function(n){"use strict";var r={log:function(){}},i={};t.extend(r,n);t.extend(this,{receiveMessage:function(n,r){var u=function(n){r(n.data)};window.postMessage?i[n]=t(window).attach("message",u):log("iframe message passing not supported in this browser!","error")},stopReceivingMessages:function(n){if(window.postMessage){var t=i[n];t&&t()}}})};t.FormUploadHandler=function(n){"use strict";function a(n){delete u[n];l&&(clearTimeout(f[n]),delete f[n],o.stopReceivingMessages(n));var i=document.getElementById(r._getIframeName(n));i&&(i.setAttribute("src","javascript:false;"),t(i).remove())}function s(n){return n.split("_")[0]}function v(n){var i=t.toElement("<iframe src='javascript:false;' name='"+n+"' />");return i.setAttribute("id",n),i.style.display="none",document.body.appendChild(i),i}function y(n,h){var c=n.id,l=s(c);e[b(l)]=h;u[l]=t(n).attach("load",function(){r.getInput(l)&&(i("Received iframe load event for CORS upload request (iframe name "+c+")"),f[c]=setTimeout(function(){var n="No valid message received from loaded iframe for iframe name "+c;i(n,"error");h({error:n})},1e3))});o.receiveMessage(c,function(n){i("Received the following window message: '"+n+"'");var u,h=(s(c),r._parseJsonResponse(n)),t=h.uuid;t&&e[t]?(i("Handling response for iframe name "+c),clearTimeout(f[c]),delete f[c],r._detachLoadEvent(c),u=e[t],delete e[t],o.stopReceivingMessages(c),u(h)):t||i("'"+n+"' does not contain a UUID - ignoring.")})}var h=n.options,r=this,c=n.proxy,p=t.getUniqueId(),e={},u={},f={},l=h.isCors,w=h.inputName,b=c.getUuid,i=c.log,o=new t.WindowReceiveMessage({log:i});t.extend(this,new t.UploadHandler(n));t.override(this,function(n){return{add:function(i,r){n.add(i,{input:r});r.setAttribute("name",w);r.parentNode&&t(r).remove()},expunge:function(t){a(t);n.expunge(t)},isValid:function(t){return n.isValid(t)&&void 0!==r._getFileState(t).input}}});t.extend(this,{getInput:function(n){return r._getFileState(n).input},_attachLoadEvent:function(n,r){var f;l?y(n,r):u[n.id]=t(n).attach("load",function(){if(i("Received response for "+n.id),n.parentNode){try{if(n.contentDocument&&n.contentDocument.body&&"false"==n.contentDocument.body.innerHTML)return}catch(n){i("Error when attempting to access iframe during handling of upload response ("+n.message+")","error");f={success:!1}}r(f)}})},_createIframe:function(n){return v(r._getIframeName(n))},_detachLoadEvent:function(n){void 0!==u[n]&&(u[n](),delete u[n])},_getIframeName:function(n){return n+"_"+p},_initFormForUpload:function(n){var e=n.method,r=n.endpoint,u=n.params,o=n.paramsInBody,s=n.targetName,i=t.toElement("<form method='"+e+"' enctype='multipart/form-data'><\/form>"),f=r;return o?t.obj2Inputs(u,i):f=t.obj2url(u,r),i.setAttribute("action",f),i.setAttribute("target",s),i.style.display="none",document.body.appendChild(i),i},_parseJsonResponse:function(n){var r={};try{r=t.parseJson(n)}catch(n){i("Error when attempting to parse iframe upload response ("+n.message+")","error")}return r}})};t.XhrUploadHandler=function(n){"use strict";function a(n){t.each(i._getXhrs(n),function(t,r){var u=i._getAjaxRequester(n,t);r.onreadystatechange=null;r.upload.onprogress=null;r.abort();u&&u.canceled&&u.canceled(n)})}var i=this,v=n.options.namespace,r=n.proxy,f=n.options.chunking,h=function(n){var e=i._getFileState(n),r;return e.chunkSize?e.chunkSize:(r=f.partSize,t.isFunction(r)&&(r=r(n,u(n))),e.chunkSize=r,r)},c=n.options.resume,y=f&&n.options.chunking.enabled&&t.supportedFeatures.chunking,e=c&&n.options.resume.enabled&&y&&t.supportedFeatures.resume,o=r.getName,u=r.getSize,p=r.getUuid,w=r.getEndpoint,b=r.getDataByUuid,k=r.onUuidChanged,l=r.onProgress,s=r.log,d=r.getCustomResumeData;t.extend(this,new t.UploadHandler(n));t.override(this,function(n){return{add:function(r,u){if(t.isFile(u)||t.isBlob(u))n.add(r,{file:u});else{if(!(u instanceof t.BlobProxy))throw new Error("Passed obj is not a File, Blob, or proxy");n.add(r,{proxy:u})}i._initTempState(r);e&&i._maybePrepareForResume(r)},expunge:function(t){a(t);i._maybeDeletePersistedChunkData(t);i._clearXhrs(t);n.expunge(t)}}});t.extend(this,{clearCachedChunk:function(n,t){var r=i._getFileState(n);r&&delete r.temp.cachedChunks[t]},clearXhr:function(n,t){var r=i._getFileState(n).temp;r.xhrs&&delete r.xhrs[t];r.ajaxRequesters&&delete r.ajaxRequesters[t]},finalizeChunks:function(n,r){var f=i._getTotalChunks(n)-1,u=i._getXhr(n,f);return r?(new t.Promise).success(r(u),u):(new t.Promise).success({},u)},getFile:function(n){return i.isValid(n)&&i._getFileState(n).file},getProxy:function(n){return i.isValid(n)&&i._getFileState(n).proxy},getResumableFilesData:function(){var n=[];return i._iterateResumeRecords(function(t,r){i.moveInProgressToRemaining(null,r.chunking.inProgress,r.chunking.remaining);var u={name:r.name,remaining:r.chunking.remaining,size:r.size,uuid:r.uuid};r.key&&(u.key=r.key);r.customResumeData&&(u.customResumeData=r.customResumeData);n.push(u)}),n},isAttemptingResume:function(n){return i._getFileState(n).attemptingResume},isResumable:function(n){return!!f&&i.isValid(n)&&!i._getFileState(n).notResumable},moveInProgressToRemaining:function(n,r,u){var o=i._getFileState(n)||{},e=o.chunking||{},f=r||e.inProgress,h=u||e.remaining;f&&(s(t.format("Moving these chunks from in-progress {}, to remaining.",JSON.stringify(f))),f.reverse(),t.each(f,function(n,t){h.unshift(t)}),f.length=0)},pause:function(n){if(i.isValid(n))return s(t.format("Aborting XHR upload for {} '{}' due to pause instruction.",n,o(n))),i._getFileState(n).paused=!0,a(n),!0},reevaluateChunking:function(n){if(f&&i.isValid(n)){var r,u,t=i._getFileState(n);if(delete t.chunking,t.chunking={},r=i._getTotalChunks(n),r>1||f.mandatory){for(t.chunking.enabled=!0,t.chunking.parts=r,t.chunking.remaining=[],u=0;u<r;u++)t.chunking.remaining.push(u);i._initTempState(n)}else t.chunking.enabled=!1}},updateBlob:function(n,t){i.isValid(n)&&(i._getFileState(n).file=t)},_clearXhrs:function(n){var r=i._getFileState(n).temp;t.each(r.ajaxRequesters,function(n){delete r.ajaxRequesters[n]});t.each(r.xhrs,function(n){delete r.xhrs[n]})},_createXhr:function(n,r){return i._registerXhr(n,r,t.createXhrInstance())},_getAjaxRequester:function(n,t){var r=null==t?-1:t;return i._getFileState(n).temp.ajaxRequesters[r]},_getChunkData:function(n,r){var e=h(n),s=u(n),a=i.getFile(n),f=e*r,o=f+e>=s?s:f+e,v=i._getTotalChunks(n),c=this._getFileState(n).temp.cachedChunks,l=c[r]||t.sliceBlob(a,f,o);return c[r]=l,{part:r,start:f,end:o,count:v,blob:l,size:o-f}},_getChunkDataForCallback:function(n){return{partIndex:n.part,startByte:n.start+1,endByte:n.end,totalParts:n.count}},_getLocalStorageId:function(n){var r=o(n),f=u(n),e=h(n),s=w(n),l=c.customKeys(n),i=t.format("qq{}resume{}-{}-{}-{}-{}",v,"5.0",r,f,e,s);return l.forEach(function(n){i+="-"+n}),i},_getMimeType:function(n){return i.getFile(n).type},_getPersistableData:function(n){return i._getFileState(n).chunking},_getTotalChunks:function(n){if(f){var t=u(n),i=h(n);return Math.ceil(t/i)}},_getXhr:function(n,t){var r=null==t?-1:t;return i._getFileState(n).temp.xhrs[r]},_getXhrs:function(n){return i._getFileState(n).temp.xhrs},_iterateResumeRecords:function(n){e&&t.each(localStorage,function(i,r){0===i.indexOf(t.format("qq{}resume",v))&&n(i,JSON.parse(r))})},_initTempState:function(n){i._getFileState(n).temp={ajaxRequesters:{},chunkProgress:{},xhrs:{},cachedChunks:{}}},_markNotResumable:function(n){i._getFileState(n).notResumable=!0},_maybeDeletePersistedChunkData:function(n){var t;return!!(e&&i.isResumable(n)&&(t=i._getLocalStorageId(n),t&&localStorage.getItem(t)))&&(localStorage.removeItem(t),!0)},_maybePrepareForResume:function(n){var f,r,u=i._getFileState(n);e&&void 0===u.key&&(f=i._getLocalStorageId(n),r=localStorage.getItem(f),r&&(r=JSON.parse(r),b(r.uuid)?i._markNotResumable(n):(s(t.format("Identified file with ID {} and name of {} as resumable.",n,o(n))),k(n,r.uuid),u.key=r.key,u.chunking=r.chunking,u.loaded=r.loaded,u.customResumeData=r.customResumeData,u.attemptingResume=!0,i.moveInProgressToRemaining(n))))},_maybePersistChunkedState:function(n){var r,f,h=i._getFileState(n),c;if(e&&i.isResumable(n)){c=d(n);r=i._getLocalStorageId(n);f={name:o(n),size:u(n),uuid:p(n),key:h.key,chunking:h.chunking,loaded:h.loaded,lastUpdated:Date.now()};c&&(f.customResumeData=c);try{localStorage.setItem(r,JSON.stringify(f))}catch(r){s(t.format("Unable to save resume data for '{}' due to error: '{}'.",n,r.toString()),"warn")}}},_registerProgressHandler:function(n,r,f){var s=i._getXhr(n,r),e=o(n),h={simple:function(t,i){var r=u(n);t===i?l(n,e,r,r):l(n,e,t>=r?r-1:t,r)},chunked:function(o,s){var h=i._getFileState(n).temp.chunkProgress,a=i._getFileState(n).loaded,v=o,y=s,p=u(n),w=v-(y-f),c=a;h[r]=w;t.each(h,function(n,t){c+=t});l(n,e,c,p)}};s.upload.onprogress=function(n){n.lengthComputable&&h[null==f?"simple":"chunked"](n.loaded,n.total)}},_registerXhr:function(n,t,r,u){var e=null==t?-1:t,f=i._getFileState(n).temp;return f.xhrs=f.xhrs||{},f.ajaxRequesters=f.ajaxRequesters||{},f.xhrs[e]=r,u&&(f.ajaxRequesters[e]=u),r},_removeExpiredChunkingRecords:function(){var n=c.recordsExpireIn;i._iterateResumeRecords(function(t,i){var r=new Date(i.lastUpdated);r.setDate(r.getDate()+n);r.getTime()<=Date.now()&&(s("Removing expired resume record with key "+t),localStorage.removeItem(t))})},_shouldChunkThisFile:function(n){var t=i._getFileState(n);if(t)return t.chunking||i.reevaluateChunking(n),t.chunking.enabled}})};t.DeleteFileAjaxRequester=function(n){"use strict";function u(){return"POST"===i.method.toUpperCase()?{_method:"DELETE"}:{}}var r,i={method:"DELETE",uuidParamName:"qquuid",endpointStore:{},maxConnections:3,customHeaders:function(){return{}},paramsStore:{},cors:{expected:!1,sendCredentials:!1},log:function(){},onDelete:function(){},onDeleteComplete:function(){}};t.extend(i,n);r=t.extend(this,new t.AjaxRequester({acceptHeader:"application/json",validMethods:["POST","DELETE"],method:i.method,endpointStore:i.endpointStore,paramsStore:i.paramsStore,mandatedParams:u(),maxConnections:i.maxConnections,customHeaders:function(n){return i.customHeaders.get(n)},log:i.log,onSend:i.onDelete,onComplete:i.onDeleteComplete,cors:i.cors}));t.extend(this,{sendDelete:function(n,t,u){var f=u||{};i.log("Submitting delete file request for "+n);"DELETE"===i.method?r.initTransport(n).withPath(t).withParams(f).send():(f[i.uuidParamName]=t,r.initTransport(n).withParams(f).send())}})},function(){function u(n){var t,r=n.naturalWidth,u=n.naturalHeight,i=document.createElement("canvas");return r*u>1048576&&(i.width=i.height=1,t=i.getContext("2d"),t.drawImage(n,-r+1,0),0===t.getImageData(0,0,1,1).data[3])}function f(n,t,i){var u,s,h,f,e=document.createElement("canvas"),o=0,c=i,r=i;for(e.width=1,e.height=i,u=e.getContext("2d"),u.drawImage(n,0,0),s=u.getImageData(0,0,1,i).data;r>o;)h=s[4*(r-1)+3],0===h?c=r:o=r,r=c+o>>1;return f=r/i,0===f?1:f}function e(i,r,u,f){var e=document.createElement("canvas"),s=u.mime||"image/jpeg",o=new t.Promise;return n(i,r,e,u,f).then(function(){o.success(e.toDataURL(s,u.quality||.8))}),o}function o(n){if(!t.ios())throw new t.Error("Downsampled dimensions can only be reliably calculated for iOS!");if(n.origHeight*n.origWidth>5241e3)return{newHeight:Math.round(Math.sqrt(5241e3*(n.origHeight/n.origWidth))),newWidth:Math.round(Math.sqrt(5241e3*(n.origWidth/n.origHeight)))}}function n(n,r,e,h,c){var v,y=n.naturalWidth,p=n.naturalHeight,l=h.width,a=h.height,w=e.getContext("2d"),b=new t.Promise;return w.save(),h.resize?s({blob:r,canvas:e,image:n,imageHeight:p,imageWidth:y,orientation:h.orientation,resize:h.resize,targetHeight:a,targetWidth:l}):(t.supportedFeatures.unlimitedScaledImageSize||(v=o({origWidth:l,origHeight:a}),v&&(t.log(t.format("Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h",l,a,v.newWidth,v.newHeight),"warn"),l=v.newWidth,a=v.newHeight)),i(e,l,a,h.orientation),t.ios()?function(){u(n)&&(y/=2,p/=2);var r,e,o,t=1024,i=document.createElement("canvas"),k=c?f(n,y,p):1,h=Math.ceil(t*l/y),v=Math.ceil(t*a/p/k),s=0,b=0;for(i.width=i.height=t,r=i.getContext("2d");s<p;){for(e=0,o=0;e<y;)r.clearRect(0,0,t,t),r.drawImage(n,-e,-s),w.drawImage(i,0,0,t,t,o,b,h,v),e+=t,o+=h;s+=t;b+=v}w.restore();i=r=null}():w.drawImage(n,0,0,l,a),e.qqImageRendered&&e.qqImageRendered(),b.success(),b)}function s(n){var h=n.blob,e=n.image,c=n.imageHeight,l=n.imageWidth,a=n.orientation,u=new t.Promise,v=n.resize,f=document.createElement("canvas"),y=f.getContext("2d"),r=n.canvas,o=n.targetHeight,s=n.targetWidth;return i(f,l,c,a),r.height=o,r.width=s,y.drawImage(e,0,0),v({blob:h,height:o,image:e,sourceCanvas:f,targetCanvas:r,width:s}).then(function(){r.qqImageRendered&&r.qqImageRendered();u.success()},u.failure),u}function i(n,t,i,r){switch(r){case 5:case 6:case 7:case 8:n.width=i;n.height=t;break;default:n.width=t;n.height=i}var u=n.getContext("2d");switch(r){case 2:u.translate(t,0);u.scale(-1,1);break;case 3:u.translate(t,i);u.rotate(Math.PI);break;case 4:u.translate(0,i);u.scale(1,-1);break;case 5:u.rotate(.5*Math.PI);u.scale(1,-1);break;case 6:u.rotate(.5*Math.PI);u.translate(0,-i);break;case 7:u.rotate(.5*Math.PI);u.translate(t,-i);u.scale(-1,1);break;case 8:u.rotate(-.5*Math.PI);u.translate(-t,0)}}function r(n,t){var i=this;window.Blob&&n instanceof Blob&&function(){var t=new Image,r=window.URL&&window.URL.createObjectURL?window.URL:window.webkitURL&&window.webkitURL.createObjectURL?window.webkitURL:null;if(!r)throw Error("No createObjectURL function found to create blob url");t.src=r.createObjectURL(n);i.blob=n;n=t}();n.naturalWidth||n.naturalHeight||(n.onload=function(){var n=i.imageLoadListeners;n&&(i.imageLoadListeners=null,setTimeout(function(){for(var t=0,i=n.length;t<i;t++)n[t]()},0))},n.onerror=t,this.imageLoadListeners=[]);this.srcImage=n}r.prototype.render=function(i,r){r=r||{};var h,c=this,o=this.srcImage.naturalWidth,s=this.srcImage.naturalHeight,u=r.width,f=r.height,l=r.maxWidth,a=r.maxHeight,v=!this.blob||"image/jpeg"===this.blob.type,y=i.tagName.toLowerCase();if(this.imageLoadListeners)return void this.imageLoadListeners.push(function(){c.render(i,r)});u&&!f?f=s*u/o<<0:f&&!u?u=o*f/s<<0:(u=o,f=s);l&&u>l&&(u=l,f=s*u/o<<0);a&&f>a&&(f=a,u=o*f/s<<0);h={width:u,height:f};t.each(r,function(n,t){h[n]=t});"img"===y?function(){var n=i.src;e(c.srcImage,c.blob,h,v).then(function(t){i.src=t;n===i.src&&i.onload()})}():"canvas"===y&&n(this.srcImage,this.blob,i,h,v);"function"==typeof this.onrender&&this.onrender(i)};t.MegaPixImage=r}();t.ImageGenerator=function(n){"use strict";function r(n){return"img"===n.tagName.toLowerCase()}function u(n){return"canvas"===n.tagName.toLowerCase()}function h(){return void 0!==(new Image).crossOrigin}function c(){var n=document.createElement("canvas");return n.getContext&&n.getContext("2d")}function e(n){var r=n.split("/"),u=r[r.length-1].split("?")[0],i=t.getExtension(u);switch(i=i&&i.toLowerCase()){case"jpeg":case"jpg":return"image/jpeg";case"png":return"image/png";case"bmp":return"image/bmp";case"gif":return"image/gif";case"tiff":case"tif":return"image/tiff"}}function f(n){var r,u,f,i=document.createElement("a");return i.href=n,r=i.protocol,f=i.port,u=i.hostname,r.toLowerCase()!==window.location.protocol.toLowerCase()||u.toLowerCase()!==window.location.hostname.toLowerCase()||f!==window.location.port&&!t.ie()}function l(t,i){t.onload=function(){t.onload=null;t.onerror=null;i.success(t)};t.onerror=function(){t.onload=null;t.onerror=null;n("Problem drawing thumbnail!","error");i.failure(t,"Problem drawing thumbnail!")}}function a(n,t){n.qqImageRendered=function(){t.success(n)}}function i(i,f){var e=r(i)||u(i);return r(i)?l(i,f):u(i)?a(i,f):(f.failure(i),n(t.format("Element container of type {} is not supported!",i.tagName),"error")),e}function v(r,u,f){var e=new t.Promise,s=new t.Identify(r,n),o=f.maxSize,h=null==f.orient||f.orient,c=function(){u.onerror=null;u.onload=null;n("Could not render preview, file may be too large!","error");e.failure(u,"Browser cannot render image!")};return s.isPreviewable().then(function(s){var a={parse:function(){return(new t.Promise).success()}},v=h?new t.Exif(r,n):a,l=new t.MegaPixImage(r,c);i(u,e)&&v.parse().then(function(n){var t=n&&n.Orientation;l.render(u,{maxWidth:o,maxHeight:o,orientation:t,mime:s,resize:f.customResizeFunction})},function(i){n(t.format("EXIF data could not be parsed ({}).  Assuming orientation = 1.",i));l.render(u,{maxWidth:o,maxHeight:o,mime:s,resize:f.customResizeFunction})})},function(){n("Not previewable");e.failure(u,"Not previewable")}),e}function o(n,r,u,o,s){var h=new Image,c=new t.Promise;i(h,c);f(n)&&(h.crossOrigin="anonymous");h.src=n;c.then(function(){i(r,u);new t.MegaPixImage(h).render(r,{maxWidth:o,maxHeight:o,mime:e(n),resize:s})},u.failure)}function s(n,r,u,f){i(r,u);t(r).css({maxWidth:f+"px",maxHeight:f+"px"});r.src=n}function y(n,e,l){var a=new t.Promise,y=l.scale,v=y?l.maxSize:null;return y&&r(e)?c()?f(n)&&!h()?s(n,e,a,v):o(n,e,a,v):s(n,e,a,v):u(e)?o(n,e,a,v):i(e,a)&&(e.src=n),a}t.extend(this,{generate:function(i,r,u){return t.isString(i)?(n("Attempting to update thumbnail based on server response."),y(i,r,u||{})):(n("Attempting to draw client-side image preview."),v(i,r,u||{}))}});this._testing={};this._testing.isImg=r;this._testing.isCanvas=u;this._testing.isCrossOrigin=f;this._testing.determineMimeOfFileName=e};t.Exif=function(n,i){"use strict";function r(n){for(var t=0,i=0;n.length>0;)t+=parseInt(n.substring(0,2),16)*Math.pow(2,i),n=n.substring(2,n.length),i+=8;return t}function u(i,r){var f=i,e=r;return void 0===f&&(f=2,e=new t.Promise),t.readBlobToHex(n,f,4).then(function(n){var t,i=/^ffe([0-9])/.exec(n);i?"1"!==i[1]?(t=parseInt(n.slice(4,8),16),u(f+t+2,e)):e.success(f):e.failure("No EXIF header to be found!")}),e}function e(){var i=new t.Promise;return t.readBlobToHex(n,0,6).then(function(n){0!==n.indexOf("ffd8")?i.failure("Not a valid JPEG!"):u().then(function(n){i.success(n)},function(n){i.failure(n)})}),i}function o(i){var r=new t.Promise;return t.readBlobToHex(n,i+10,2).then(function(n){r.success("4949"===n)}),r}function s(i,u){var f=new t.Promise;return t.readBlobToHex(n,i+18,2).then(function(n){if(u)return f.success(r(n));f.success(parseInt(n,16))}),f}function h(i,r){var u=i+20,f=12*r;return t.readBlobToHex(n,u,f)}function c(n){for(var i=[],t=0;t+24<=n.length;)i.push(n.slice(t,t+24)),t+=24;return i}function l(n,i){var u=t.extend([],a),e={};return t.each(i,function(t,i){var o,h,c,l=i.slice(0,4),s=n?r(l):parseInt(l,16),a=u.indexOf(s);if(a>=0&&(h=f[s].name,c=f[s].bytes,o=i.slice(16,16+2*c),e[h]=n?r(o):parseInt(o,16),u.splice(a,1)),0===u.length)return!1}),e}var a=[274],f={274:{name:"Orientation",bytes:2}};t.extend(this,{parse:function(){var u=new t.Promise,r=function(n){i(t.format("EXIF header parse failed: '{}' ",n));u.failure(n)};return e().then(function(f){i(t.format("Moving forward with EXIF header parsing for '{}'",void 0===n.name?"blob":n.name));o(f).then(function(n){i(t.format("EXIF Byte order is {} endian",n?"little":"big"));s(f,n).then(function(e){i(t.format("Found {} APP1 directory entries",e));h(f,e).then(function(t){var r=c(t),f=l(n,r);i("Successfully parsed some EXIF tags");u.success(f)},r)},r)},r)},r),u}});this._testing={};this._testing.parseLittleEndian=r};t.Identify=function(n,i){"use strict";function r(n,i){var r=!1,u=[].concat(n);return t.each(u,function(n,t){if(0===i.indexOf(t))return r=!0,!1}),r}t.extend(this,{isPreviewable:function(){var o=this,u=new t.Promise,f=!1,e=void 0===n.name?"blob":n.name;return i(t.format("Attempting to determine if {} can be rendered in this browser",e)),i("First pass: check type attribute of blob object."),this.isPreviewableSync()?(i("Second pass: check for magic bytes in file header."),t.readBlobToHex(n,0,4).then(function(n){t.each(o.PREVIEWABLE_MIME_TYPES,function(i,e){if(r(e,n))return("image/tiff"!==i||t.supportedFeatures.tiffPreviews)&&(f=!0,u.success(i)),!1});i(t.format("'{}' is {} able to be rendered in this browser",e,f?"":"NOT"));f||u.failure()},function(){i("Error reading file w/ name '"+e+"'.  Not able to be rendered in this browser.");u.failure()})):u.failure(),u},isPreviewableSync:function(){var u=n.type,f=t.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES),u)>=0,r=!1,e=void 0===n.name?"blob":n.name;return f&&(r="image/tiff"!==u||t.supportedFeatures.tiffPreviews),!r&&i(e+" is not previewable in this browser per the blob's type attr"),r}})};t.Identify.prototype.PREVIEWABLE_MIME_TYPES={"image/jpeg":"ffd8ff","image/gif":"474946","image/png":"89504e","image/bmp":"424d","image/tiff":["49492a00","4d4d002a"]};t.ImageValidation=function(n,i){"use strict";function r(n){var i=!1;return t.each(n,function(n,t){if(t>0)return i=!0,!1}),i}function u(){var r=new t.Promise;return new t.Identify(n,i).isPreviewable().then(function(){var t=new Image,u=window.URL&&window.URL.createObjectURL?window.URL:window.webkitURL&&window.webkitURL.createObjectURL?window.webkitURL:null;u?(t.onerror=function(){i("Cannot determine dimensions for image.  May be too large.","error");r.failure()},t.onload=function(){r.success({width:this.width,height:this.height})},t.src=u.createObjectURL(n)):(i("No createObjectURL function available to generate image URL!","error"),r.failure())},r.failure),r}function f(n,i){var r;return t.each(n,function(n,t){if(t>0){var u=/(max|min)(Width|Height)/.exec(n),e=u[2].charAt(0).toLowerCase()+u[2].slice(1),f=i[e];switch(u[1]){case"min":if(f<t)return r=n,!1;break;case"max":if(f>t)return r=n,!1}}}),r}this.validate=function(n){var e=new t.Promise;return i("Attempting to validate image."),r(n)?u().then(function(t){var i=f(n,t);i?e.failure(i):e.success()},e.success):e.success(),e}};t.Session=function(n){"use strict";function r(n){if(t.isArray(n))return!0;i.log("Session response is not an array.","error")}function u(n,u,f,e){var o=!1;u=u&&r(n);u&&t.each(n,function(n,r){if(null==r.uuid)o=!0,i.log(t.format("Session response item {} did not include a valid UUID - ignoring.",n),"error");else if(null==r.name)o=!0,i.log(t.format("Session response item {} did not include a valid name - ignoring.",n),"error");else try{return i.addFileRecord(r),!0}catch(n){o=!0;i.log(n.message,"error")}return!1});e[u&&!o?"success":"failure"](n,f)}var i={endpoint:null,params:{},customHeaders:{},cors:{},addFileRecord:function(){},log:function(){}};t.extend(i,n,!0);this.refresh=function(){var n=new t.Promise,r=function(t,i,r){u(t,i,r,n)},f=t.extend({},i);return new t.SessionAjaxRequester(t.extend(f,{onComplete:r})).queryServer(),n}};t.SessionAjaxRequester=function(n){"use strict";function u(n,r,u){var f=null;if(null!=r.responseText)try{f=t.parseJson(r.responseText)}catch(n){i.log("Problem parsing session response: "+n.message,"error");u=!0}i.onComplete(f,!u,r)}var r,i={endpoint:null,customHeaders:{},params:{},cors:{expected:!1,sendCredentials:!1},onComplete:function(){},log:function(){}};t.extend(i,n);r=t.extend(this,new t.AjaxRequester({acceptHeader:"application/json",validMethods:["GET"],method:"GET",endpointStore:{get:function(){return i.endpoint}},customHeaders:i.customHeaders,log:i.log,onComplete:u,cors:i.cors}));t.extend(this,{queryServer:function(){var n=t.extend({},i.params);i.log("Session query request.");r.initTransport("sessionRefresh").withParams(n).withCacheBuster().send()}})};t.Scaler=function(n,i){"use strict";var u=n.customResizer,f=n.sendOriginal,e=n.orient,o=n.defaultType,s=n.defaultQuality/100,h=n.failureText,c=n.includeExif,r=this._getSortedSizes(n.sizes);t.extend(this,{enabled:t.supportedFeatures.scaling&&r.length>0,getFileRecords:function(n,l,a){var y=this,p=[],v=a.blob?a.blob:a;return new t.Identify(v,i).isPreviewableSync()?(t.each(r,function(n,r){var f=y._determineOutputType({defaultType:o,requestedType:r.type,refType:v.type});p.push({uuid:t.getUniqueId(),name:y._getName(l,{name:r.name,type:f,refType:v.type}),blob:new t.BlobProxy(v,t.bind(y._generateScaledImage,y,{customResizeFunction:u,maxSize:r.maxSize,orient:e,type:f,quality:s,failedText:h,includeExif:c,log:i}))})}),p.push({uuid:n,name:l,size:v.size,blob:f?v:null})):p.push({uuid:n,name:l,size:v.size,blob:v}),p},handleNewFile:function(n,i,r,u,f,e,o,s){var v=this,l=(n.qqButtonId||n.blob&&n.blob.qqButtonId,[]),h=null,y=s.addFileToHandler,c=s.uploadData,a=s.paramsStore,p=t.getUniqueId();t.each(v.getFileRecords(r,i,n),function(n,i){var r,u=i.size;i.blob instanceof t.BlobProxy&&(u=-1);r=c.addFile({uuid:i.uuid,name:i.name,size:u,batchId:e,proxyGroupId:p});i.blob instanceof t.BlobProxy?l.push(r):h=r;i.blob?(y(r,i.blob),f.push({id:r,file:i.blob})):c.setStatus(r,t.status.REJECTED)});null!==h&&(t.each(l,function(n,t){var i={qqparentuuid:c.retrieve({id:h}).uuid,qqparentsize:c.retrieve({id:h}).size};i[o]=c.retrieve({id:t}).uuid;c.setParentId(t,h);a.addReadOnly(t,i)}),l.length&&function(){var n={};n[o]=c.retrieve({id:h}).uuid;a.addReadOnly(h,n)}())}})};t.extend(t.Scaler.prototype,{scaleImage:function(n,i,r){"use strict";if(!t.supportedFeatures.scaling)throw new t.Error("Scaling is not supported in this browser!");var u=new t.Promise,e=r.log,o=r.getFile(n),f=r.uploadData.retrieve({id:n}),s=f&&f.name,h=f&&f.uuid,c={customResizer:i.customResizer,sendOriginal:!1,orient:i.orient,defaultType:i.type||null,defaultQuality:i.quality,failedToScaleText:"Unable to scale",sizes:[{name:"",maxSize:i.maxSize}]},l=new t.Scaler(c,e);return t.Scaler&&t.supportedFeatures.imagePreviews&&o?t.bind(function(){var i=l.getFileRecords(h,s,o)[0];i&&i.blob instanceof t.BlobProxy?i.blob.create().then(u.success,u.failure):(e(n+" is not a scalable image!","error"),u.failure())},this)():(u.failure(),e("Could not generate requested scaled image for "+n+".  Scaling is either not possible in this browser, or the file could not be located.","error")),u},_determineOutputType:function(n){"use strict";var i=n.requestedType,r=n.defaultType,u=n.refType;return r||i?i&&t.indexOf(Object.keys(t.Identify.prototype.PREVIEWABLE_MIME_TYPES),i)>=0?"image/tiff"===i?t.supportedFeatures.tiffPreviews?i:r:i:r:"image/jpeg"!==u?"image/png":u},_getName:function(n,i){"use strict";var f=n.lastIndexOf("."),e=i.type||"image/png",s=i.refType,r="",o=t.getExtension(n),u="";return i.name&&i.name.trim().length&&(u=" ("+i.name+")"),f>=0?(r=n.substr(0,f),s!==e&&(o=e.split("/")[1]),r+=u+"."+o):r=n+u,r},_getSortedSizes:function(n){"use strict";return n=t.extend([],n),n.sort(function(n,t){return n.maxSize>t.maxSize?1:n.maxSize<t.maxSize?-1:0})},_generateScaledImage:function(n,i){"use strict";var o=this,s=n.customResizeFunction,r=n.log,h=n.maxSize,c=n.orient,f=n.type,l=n.quality,a=n.failedText,v=n.includeExif&&"image/jpeg"===i.type&&"image/jpeg"===f,u=new t.Promise,y=new t.ImageGenerator(r),e=document.createElement("canvas");return r("Attempting to generate scaled version for "+i.name),y.generate(i,e,{maxSize:h,orient:c,customResizeFunction:s}).then(function(){var n=e.toDataURL(f,l),s=function(){r("Success generating scaled version for "+i.name);var f=t.dataUriToBlob(n);u.success(f)};v?o._insertExifHeader(i,n,r).then(function(t){n=t;s()},function(){r("Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.","error");s()}):s()},function(){r("Failed attempt to generate scaled version for "+i.name,"error");u.failure(a)}),u},_insertExifHeader:function(n,i,r){"use strict";var u=new FileReader,f=new t.Promise,e="";return u.onload=function(){e=u.result;f.success(t.ExifRestorer.restore(e,i))},u.onerror=function(){r("Problem reading "+n.name+" during attempt to transfer EXIF data to scaled version.","error");f.failure()},u.readAsDataURL(n),f},_dataUriToBlob:function(n){"use strict";var i,u,r,f;return i=n.split(",")[0].indexOf("base64")>=0?atob(n.split(",")[1]):decodeURI(n.split(",")[1]),u=n.split(",")[0].split(":")[1].split(";")[0],r=new ArrayBuffer(i.length),f=new Uint8Array(r),t.each(i,function(n,t){f[n]=t.charCodeAt(0)}),this._createBlob(r,u)},_createBlob:function(n,t){"use strict";var r=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,i=r&&new r;return i?(i.append(n),i.getBlob(t)):new Blob([n],{type:t})}});t.ExifRestorer=function(){var n={};return n.KEY_STR="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",n.encode64=function(n){var u,t,o,s,f,h="",i="",r="",e=0;do u=n[e++],t=n[e++],i=n[e++],o=u>>2,s=(3&u)<<4|t>>4,f=(15&t)<<2|i>>6,r=63&i,isNaN(t)?f=r=64:isNaN(i)&&(r=64),h=h+this.KEY_STR.charAt(o)+this.KEY_STR.charAt(s)+this.KEY_STR.charAt(f)+this.KEY_STR.charAt(r),u=t=i="",o=s=f=r="";while(e<n.length);return h},n.restore=function(n,t){if(!n.match("data:image/jpeg;base64,"))return t;var i=this.decode64(n.replace("data:image/jpeg;base64,","")),r=this.slice2Segments(i),u=this.exifManipulation(t,r);return"data:image/jpeg;base64,"+this.encode64(u)},n.exifManipulation=function(n,t){var i=this.getExifArray(t),r=this.insertExif(n,i);return new Uint8Array(r)},n.getExifArray=function(n){for(var t,i=0;i<n.length;i++)if(t=n[i],255==t[0]&225==t[1])return t;return[]},n.insertExif=function(n,t){var f=n.replace("data:image/jpeg;base64,",""),r=this.decode64(f),u=r.indexOf(255,3),e=r.slice(0,u),o=r.slice(u),i=e;return i=i.concat(t),i=i.concat(o)},n.slice2Segments=function(n){for(var t=0,i=[];;){if(255==n[t]&218==n[t+1])break;if(255==n[t]&216==n[t+1])t+=2;else{var u=256*n[t+2]+n[t+3],r=t+u+2,f=n.slice(t,r);i.push(f);t=r}if(t>n.length)break}return i},n.decode64=function(n){var e,o,s,r,t,h="",u="",i=0,f=[];if(/[^A-Za-z0-9\+\/\=]/g.exec(n))throw new Error("There were invalid base64 characters in the input text.  Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='");n=n.replace(/[^A-Za-z0-9\+\/\=]/g,"");do s=this.KEY_STR.indexOf(n.charAt(i++)),r=this.KEY_STR.indexOf(n.charAt(i++)),t=this.KEY_STR.indexOf(n.charAt(i++)),u=this.KEY_STR.indexOf(n.charAt(i++)),e=s<<2|r>>4,o=(15&r)<<4|t>>2,h=(3&t)<<6|u,f.push(e),64!=t&&f.push(o),64!=u&&f.push(h),e=o=h="",s=r=t=u="";while(i<n.length);return f},n}();t.TotalProgress=function(n,i){"use strict";var r={},f=0,u=0,o=-1,s=-1,h=function(t,i){t===o&&i===s||n(t,i);o=t;s=i},l=function(n,i){var r=!0;return t.each(n,function(n,u){if(t.indexOf(i,u)>=0)return r=!1,!1}),r},a=function(n){e(n,-1,-1);delete r[n]},v=function(n,t,i){(0===t.length||l(t,i))&&(h(u,u),this.reset())},c=function(n){var t=i(n);t>0&&(e(n,0,t),r[n]={loaded:0,total:t})},e=function(n,t,i){var e=r[n]?r[n].loaded:0,o=r[n]?r[n].total:0;t===-1&&i===-1?(f-=e,u-=o):(t&&(f+=t-e),i&&(u+=i-o));h(f,u)};t.extend(this,{onAllComplete:v,onStatusChange:function(n,i,r){r===t.status.CANCELED||r===t.status.REJECTED?a(n):r===t.status.SUBMITTING&&c(n)},onIndividualProgress:function(n,t,i){e(n,t,i);r[n]={loaded:t,total:i}},onNewSize:function(n){c(n)},reset:function(){r={};f=0;u=0}})};t.PasteSupport=function(n){"use strict";function u(n){return n.type&&0===n.type.indexOf("image/")}function f(){r=t(i.targetElement).attach("paste",function(n){var r=n.clipboardData;r&&t.each(r.items,function(n,t){if(u(t)){var r=t.getAsFile();i.callbacks.pasteReceived(r)}})})}function e(){r&&r()}var i,r;i={targetElement:null,callbacks:{log:function(){},pasteReceived:function(){}}};t.extend(i,n);f();t.extend(this,{reset:function(){e()}})};t.FormSupport=function(n,i,r){"use strict";function o(n){n.getAttribute("action")&&(e.newEndpoint=n.getAttribute("action"))}function f(n,t){if(!n.checkValidity||n.checkValidity())return!0;r("Form did not pass validation checks - will not upload.","error");t()}function s(n){var r=n.submit;t(n).attach("submit",function(t){t=t||window.event;t.preventDefault?t.preventDefault():t.returnValue=!1;f(n,r)&&i()});n.submit=function(){f(n,r)&&i()}}function h(n){return n&&(t.isString(n)&&(n=document.getElementById(n)),n&&(r("Attaching to form element."),o(n),c&&s(n))),n}var e=this,c=n.interceptSubmit,u=n.element,l=n.autoUpload;t.extend(this,{newEndpoint:null,newAutoUpload:l,attachedToForm:!1,getFormInputsAsObject:function(){return null==u?null:e._form2Obj(u)}});u=h(u);this.attachedToForm=!!u};t.extend(t.FormSupport.prototype,{_form2Obj:function(n){"use strict";var i={},u=function(n){return t.indexOf(["button","image","reset","submit"],n.toLowerCase())<0},f=function(n){return t.indexOf(["checkbox","radio"],n.toLowerCase())>=0},r=function(n){return!(!f(n.type)||n.checked)||n.disabled&&"hidden"!==n.type.toLowerCase()},e=function(n){var i=null;return t.each(t(n).children(),function(n,t){if("option"===t.tagName.toLowerCase()&&t.selected)return i=t.value,!1}),i};return t.each(n.elements,function(n,f){if((t.isInput(f,!0)||"textarea"===f.tagName.toLowerCase())&&u(f.type)&&!r(f))i[f.name]=f.value;else if("select"===f.tagName.toLowerCase()&&!r(f)){var o=e(f);null!==o&&(i[f.name]=o)}}),i}});t.traditional=t.traditional||{};t.traditional.FormUploadHandler=function(n,i){"use strict";function o(n,t){var f,e,i;try{e=t.contentDocument||t.contentWindow.document;i=e.body.innerHTML;u("converting iframe's innerHTML to JSON");u("innerHTML = "+i);i&&i.match(/^<pre/i)&&(i=e.body.firstChild.firstChild.nodeValue);f=r._parseJsonResponse(i)}catch(n){u("Error when attempting to parse form upload response ("+n.message+")","error");f={success:!1}}return f}function s(t,i){var u=n.paramsStore.get(t),o="get"===n.method.toLowerCase()?"GET":"POST",s=n.endpointStore.get(t),h=f(t);return u[n.uuidName]=e(t),u[n.filenameParam]=h,r._initFormForUpload({method:o,endpoint:s,params:u,paramsInBody:n.paramsInBody,targetName:i.name})}var r=this,f=i.getName,e=i.getUuid,u=i.log;this.uploadFile=function(i){var f,c=r.getInput(i),e=r._createIframe(i),h=new t.Promise;return f=s(i,e),f.appendChild(c),r._attachLoadEvent(e,function(f){u("iframe loaded");var s=f?f:o(i,e);r._detachLoadEvent(i);n.cors.expected||t(e).remove();s.success?h.success(s):h.failure(s)}),u("Sending upload request for "+i),f.submit(),t(f).remove(),h};t.extend(this,new t.FormUploadHandler({options:{isCors:n.cors.expected,inputName:n.inputName},proxy:{onCancel:n.onCancel,getName:f,getUuid:e,log:u}}))};t.traditional=t.traditional||{};t.traditional.XhrUploadHandler=function(n,i){"use strict";var r=this,o=i.getName,s=i.getSize,h=i.getUuid,u=i.log,f=n.forceMultipart||n.paramsInBody,v=function(t,i,r){var u=s(t),e=o(t);n.omitDefaultParams||(i[n.chunking.paramNames.partIndex]=r.part,i[n.chunking.paramNames.partByteOffset]=r.start,i[n.chunking.paramNames.chunkSize]=r.size,i[n.chunking.paramNames.totalParts]=r.count,i[n.totalFileSizeName]=u);f&&!n.omitDefaultParams&&(i[n.filenameParam]=e)},y=new t.traditional.AllChunksDoneAjaxRequester({cors:n.cors,endpoint:n.chunking.success.endpoint,headers:n.chunking.success.headers,jsonPayload:n.chunking.success.jsonPayload,log:u,method:n.chunking.success.method,params:n.chunking.success.params}),c=function(n,i){var r=new t.Promise;return i.onreadystatechange=function(){if(4===i.readyState){var t=b(n,i);t.success?r.success(t.response,i):r.failure(t.response,i)}},r},p=function(t){var i=n.paramsStore.get(t),u=o(t),f=s(t);return i[n.uuidName]=h(t),i[n.filenameParam]=u,i[n.totalFileSizeName]=f,i[n.chunking.paramNames.totalParts]=r._getTotalChunks(t),i},w=function(i,r){return t.indexOf([200,201,202,203,204],i.status)<0||n.requireSuccessJson&&!r.success||r.reset},b=function(n,t){var i;return u("xhr - server response received for "+n),u("responseText = "+t.responseText),i=e(!0,t),{success:!w(t,i),response:i}},e=function(i,r){var f={};try{u(t.format("Received response status {} with body: {}",r.status,r.responseText));f=t.parseJson(r.responseText)}catch(r){i&&n.requireSuccessJson&&u("Error when attempting to parse xhr response text ("+r.message+")","error")}return f},k=function(i){var u=new t.Promise;return y.complete(i,r._createXhr(i),p(i),n.customHeaders.get(i)).then(function(n){u.success(e(!1,n),n)},function(n){u.failure(e(!1,n),n)}),u},l=function(i){var r,a=i.fileOrBlob,u=i.id,v=i.xhr,e=i.xhrOverrides||{},y=i.customParams||{},b=i.params||{},p=e.params||{},c=f?new FormData:null,k=e.method||n.method,l=e.endpoint||n.endpointStore.get(u),w=o(u),d=s(u);return n.omitDefaultParams?(r=t.extend({},y),t.extend(r,p)):(r=t.extend({},y),t.extend(r,p),t.extend(r,b),r[n.uuidName]=h(u),r[n.filenameParam]=w,f?r[n.totalFileSizeName]=d:n.paramsInBody||(r[n.inputName]=w)),n.paramsInBody||(l=t.obj2url(r,l)),v.open(k,l,!0),n.cors.expected&&n.cors.sendCredentials&&(v.withCredentials=!0),f?(n.paramsInBody&&t.obj2FormData(r,c),c.append(n.inputName,a),c):a},a=function(i){var e=i.headerOverrides,o=i.id,u=i.xhr,s,h;e?t.each(e,function(n,t){u.setRequestHeader(n,t)}):(s=n.customHeaders.get(o),h=r.getFile(o),u.setRequestHeader("Accept","application/json"),u.setRequestHeader("X-Requested-With","XMLHttpRequest"),u.setRequestHeader("Cache-Control","no-cache"),f||(u.setRequestHeader("Content-Type","application/octet-stream"),u.setRequestHeader("X-Mime-Type",h.type)),t.each(s,function(n,t){u.setRequestHeader(n,t)}))};t.extend(this,{uploadChunk:function(t){var s,h,y,i=t.id,f=t.chunkIdx,p=t.overrides||{},w=t.resuming,e=r._getChunkData(i,f),u=r._createXhr(i,f),o={};return s=c(i,u),r._registerProgressHandler(i,f,e.size),y=n.paramsStore.get(i),v(i,o,e),w&&(o[n.resume.paramNames.resuming]=!0),h=l({fileOrBlob:e.blob,id:i,customParams:y,params:o,xhr:u,xhrOverrides:p}),a({headerOverrides:p.headers,id:i,xhr:u}),u.send(h),s},uploadFile:function(t){var u,i,f,e,o=r.getFile(t);return i=r._createXhr(t),r._registerProgressHandler(t),u=c(t,i),f=n.paramsStore.get(t),e=l({fileOrBlob:o,id:t,customParams:f,xhr:i}),a({id:t,xhr:i}),i.send(e),u}});t.extend(this,new t.XhrUploadHandler({options:t.extend({namespace:"traditional"},n),proxy:t.extend({getEndpoint:n.endpointStore.get},i)}));t.override(this,function(r){return{finalizeChunks:function(u){return i.onFinalizing(u),n.chunking.success.endpoint?k(u):r.finalizeChunks(u,t.bind(e,this,!0))}}})};t.traditional.AllChunksDoneAjaxRequester=function(n){"use strict";var u,i={cors:{allowXdr:!1,expected:!1,sendCredentials:!1},endpoint:null,log:function(){},method:"POST"},r={},f={get:function(n){return t.isFunction(i.endpoint)?i.endpoint(n):i.endpoint}};t.extend(i,n);u=t.extend(this,new t.AjaxRequester({acceptHeader:"application/json",contentType:i.jsonPayload?"application/json":"application/x-www-form-urlencoded",validMethods:[i.method],method:i.method,endpointStore:f,allowXRequestedWithAndCacheControl:!1,cors:i.cors,log:i.log,onComplete:function(n,t,i){var u=r[n];delete r[n];i?u.failure(t):u.success(t)}}));t.extend(this,{complete:function(n,f,e,o){var s=new t.Promise;return i.log("Submitting All Chunks Done request for "+n),r[n]=s,u.initTransport(n).withParams(i.params(n)||e).withHeaders(i.headers(n)||o).send(f),s}})};t.DragAndDrop=function(n){"use strict";function l(n,t){var r=Array.prototype.slice.call(n);i.callbacks.dropLog("Grabbed "+n.length+" dropped files.");t.dropDisabled(!1);i.callbacks.processingDroppedFilesComplete(r,t.getElement())}function f(n){var r=new t.Promise;return n.isFile?n.file(function(t){t.qqPath=e(n);u.push(t);r.success()},function(t){i.callbacks.dropLog("Problem parsing '"+n.fullPath+"'.  FileError code "+t.code+".","error");r.failure()}):n.isDirectory&&o(n).then(function(n){var i=n.length;t.each(n,function(n,t){f(t).done(function(){i-=1;0===i&&r.success()})});n.length||r.success()},function(t){i.callbacks.dropLog("Problem parsing '"+n.fullPath+"'.  FileError code "+t.code+".","error");r.failure()}),r}function e(n){var i=n.name,t=n.fullPath,r=t.lastIndexOf(i);return t=t.substr(0,r),"/"===t.charAt(0)&&(t=t.substr(1)),t}function o(n,i,r,u){var f=u||new t.Promise,e=i||n.createReader();return e.readEntries(function(t){var i=r?r.concat(t):t;t.length?setTimeout(function(){o(n,e,i,f)},0):f.success(i)},f.failure),f}function a(n,r){var e=[],o=new t.Promise;return i.callbacks.processingDroppedFiles(),r.dropDisabled(!0),n.files.length>1&&!i.allowMultipleItems?(i.callbacks.processingDroppedFilesComplete([]),i.callbacks.dropError("tooManyFilesError",""),r.dropDisabled(!1),o.failure()):(u=[],t.isFolderDropSupported(n)?t.each(n.items,function(n,t){var i=t.webkitGetAsEntry();i&&(i.isFile?u.push(t.getAsFile()):e.push(f(i).done(function(){e.pop();0===e.length&&o.success()})))}):u=n.files,0===e.length&&o.success()),o}function s(n){var f=new t.UploadDropZone({HIDE_ZONES_EVENT_NAME:"qq-hidezones",element:n,onEnter:function(r){t(n).addClass(i.classes.dropActive);r.stopPropagation()},onLeaveNotDescendants:function(){t(n).removeClass(i.classes.dropActive)},onDrop:function(n){a(n.dataTransfer,f).then(function(){l(u,f)},function(){i.callbacks.dropLog("Drop event DataTransfer parsing failed.  No files will be uploaded.","error")})}});return r.addDisposer(function(){f.dispose()}),t(n).hasAttribute("qq-hide-dropzone")&&t(n).hide(),c.push(f),f}function h(n){var i;return t.each(n.dataTransfer.types,function(n,t){if("Files"===t)return i=!0,!1}),i}function v(n){return t.safari()?n.x<0||n.y<0:0===n.x&&0===n.y}function y(){var n=i.dropZoneElements,u=function(){setTimeout(function(){t.each(n,function(n,r){t(r).hasAttribute("qq-hide-dropzone")&&t(r).hide();t(r).removeClass(i.classes.dropActive)})},10)};t.each(n,function(i,u){var f=s(u);n.length&&t.supportedFeatures.fileDrop&&r.attach(document,"dragenter",function(i){!f.dropDisabled()&&h(i)&&t.each(n,function(n,i){i instanceof HTMLElement&&t(i).hasAttribute("qq-hide-dropzone")&&t(i).css({display:"block"})})})});r.attach(document,"dragleave",function(n){v(n)&&u()});r.attach(t(document).children()[0],"mouseenter",function(){u()});r.attach(document,"drop",function(n){h(n)&&(n.preventDefault(),u())});r.attach(document,"qq-hidezones",u)}var i,c=[],u=[],r=new t.DisposeSupport;i={dropZoneElements:[],allowMultipleItems:!0,classes:{dropActive:null},callbacks:new t.DragAndDrop.callbacks};t.extend(i,n,!0);y();t.extend(this,{setupExtraDropzone:function(n){i.dropZoneElements.push(n);s(n)},removeDropzone:function(n){var t,r=i.dropZoneElements;for(t in r)if(r[t]===n)return r.splice(t,1)},dispose:function(){r.dispose();t.each(c,function(n,t){t.dispose()})}});this._testing={};this._testing.extractDirectoryPath=e};t.DragAndDrop.callbacks=function(){"use strict";return{processingDroppedFiles:function(){},processingDroppedFilesComplete:function(){},dropError:function(n,i){t.log("Drag & drop error code '"+n+" with these specifics: '"+i+"'","error")},dropLog:function(n,i){t.log(n,i)}}};t.UploadDropZone=function(n){"use strict";function h(){return t.safari()||t.firefox()&&t.windows()}function c(){s||(h?r.attach(document,"dragover",function(n){n.preventDefault()}):r.attach(document,"dragover",function(n){n.dataTransfer&&(n.dataTransfer.dropEffect="none",n.preventDefault())}),s=!0)}function f(n){if(!t.supportedFeatures.fileDrop)return!1;var r,i=n.dataTransfer,u=t.safari();return r=!(!t.ie()||!t.supportedFeatures.fileDrop)||"none"!==i.effectAllowed,i&&r&&(i.files&&i.files.length||!u&&i.types.contains&&i.types.contains("Files")||i.types.includes&&i.types.includes("Files"))}function e(n){return void 0!==n&&(o=n),o}function l(){function t(){n=document.createEvent("Event");n.initEvent(i.HIDE_ZONES_EVENT_NAME,!0,!0)}var n;if(window.CustomEvent)try{n=new CustomEvent(i.HIDE_ZONES_EVENT_NAME)}catch(n){t()}else t();document.dispatchEvent(n)}function a(){r.attach(u,"dragover",function(n){if(f(n)){var i=t.ie()&&t.supportedFeatures.fileDrop?null:n.dataTransfer.effectAllowed;n.dataTransfer.dropEffect="move"===i||"linkMove"===i?"move":"copy";n.stopPropagation();n.preventDefault()}});r.attach(u,"dragenter",function(n){if(!e()){if(!f(n))return;i.onEnter(n)}});r.attach(u,"dragleave",function(n){if(f(n)){i.onLeave(n);var r=document.elementFromPoint(n.clientX,n.clientY);t(this).contains(r)||i.onLeaveNotDescendants(n)}});r.attach(u,"drop",function(n){if(!e()){if(!f(n))return;n.preventDefault();n.stopPropagation();i.onDrop(n);l()}})}var i,u,o,s,r=new t.DisposeSupport;i={element:null,onEnter:function(){},onLeave:function(){},onLeaveNotDescendants:function(){},onDrop:function(){}};t.extend(i,n);u=i.element;c();a();t.extend(this,{dropDisabled:function(n){return e(n)},dispose:function(){r.dispose()},getElement:function(){return u}});this._testing={};this._testing.isValidFileDrag=f},function(){"use strict";t.uiPublicApi={addInitialFiles:function(){this._parent.prototype.addInitialFiles.apply(this,arguments);this._templating.addCacheToDom()},clearStoredFiles:function(){this._parent.prototype.clearStoredFiles.apply(this,arguments);this._templating.clearFiles()},addExtraDropzone:function(n){this._dnd&&this._dnd.setupExtraDropzone(n)},removeExtraDropzone:function(n){if(this._dnd)return this._dnd.removeDropzone(n)},getItemByFileId:function(n){if(!this._templating.isHiddenForever(n))return this._templating.getFileContainer(n)},reset:function(){this._parent.prototype.reset.apply(this,arguments);this._templating.reset();!this._options.button&&this._templating.getButton()&&(this._defaultButtonId=this._createUploadButton({element:this._templating.getButton(),title:this._options.text.fileInputTitle}).getButtonId());this._dnd&&(this._dnd.dispose(),this._dnd=this._setupDragAndDrop());this._totalFilesInBatch=0;this._filesInBatchAddedToUi=0;this._setupClickAndEditEventHandlers()},setName:function(n,t){var i=this._options.formatFileName(t);this._parent.prototype.setName.apply(this,arguments);this._templating.updateFilename(n,i)},pauseUpload:function(n){var t=this._parent.prototype.pauseUpload.apply(this,arguments);return t&&this._templating.uploadPaused(n),t},continueUpload:function(n){var t=this._parent.prototype.continueUpload.apply(this,arguments);return t&&this._templating.uploadContinued(n),t},getId:function(n){return this._templating.getFileId(n)},getDropTarget:function(n){return this.getFile(n).qqDropTarget}};t.uiPrivateApi={_getButton:function(n){var t=this._parent.prototype._getButton.apply(this,arguments);return t||n===this._defaultButtonId&&(t=this._templating.getButton()),t},_removeFileItem:function(n){this._templating.removeFile(n)},_setupClickAndEditEventHandlers:function(){this._fileButtonsClickHandler=t.FileButtonsClickHandler&&this._bindFileButtonsClickEvent();this._focusinEventSupported=!t.firefox();this._isEditFilenameEnabled()&&(this._filenameClickHandler=this._bindFilenameClickEvent(),this._filenameInputFocusInHandler=this._bindFilenameInputFocusInEvent(),this._filenameInputFocusHandler=this._bindFilenameInputFocusEvent())},_setupDragAndDrop:function(){var n=this,r=this._options.dragAndDrop.extraDropzones,i=this._templating,u=i.getDropZone();return u&&r.push(u),new t.DragAndDrop({dropZoneElements:r,allowMultipleItems:this._options.multiple,classes:{dropActive:this._options.classes.dropActive},callbacks:{processingDroppedFiles:function(){i.showDropProcessing()},processingDroppedFilesComplete:function(r,u){i.hideDropProcessing();t.each(r,function(n,t){t.qqDropTarget=u});r.length&&n.addFiles(r,null,null)},dropError:function(t,i){n._itemError(t,i)},dropLog:function(t,i){n.log(t,i)}}})},_bindFileButtonsClickEvent:function(){var n=this;return new t.FileButtonsClickHandler({templating:this._templating,log:function(t,i){n.log(t,i)},onDeleteFile:function(t){n.deleteFile(t)},onCancel:function(t){n.cancel(t)},onRetry:function(t){n.retry(t)},onPause:function(t){n.pauseUpload(t)},onContinue:function(t){n.continueUpload(t)},onGetName:function(t){return n.getName(t)}})},_isEditFilenameEnabled:function(){return this._templating.isEditFilenamePossible()&&!this._options.autoUpload&&t.FilenameClickHandler&&t.FilenameInputFocusHandler&&t.FilenameInputFocusHandler},_filenameEditHandler:function(){var i=this,n=this._templating;return{templating:n,log:function(n,t){i.log(n,t)},onGetUploadStatus:function(n){return i.getUploads({id:n}).status},onGetName:function(n){return i.getName(n)},onSetName:function(n,t){i.setName(n,t)},onEditingStatusChange:function(i,r){var u=t(n.getEditInput(i)),f=t(n.getFileContainer(i));r?(u.addClass("qq-editing"),n.hideFilename(i),n.hideEditIcon(i)):(u.removeClass("qq-editing"),n.showFilename(i),n.showEditIcon(i));f.addClass("qq-temp").removeClass("qq-temp")}}},_onUploadStatusChange:function(n,i,r){this._parent.prototype._onUploadStatusChange.apply(this,arguments);this._isEditFilenameEnabled()&&this._templating.getFileContainer(n)&&r!==t.status.SUBMITTED&&(this._templating.markFilenameEditable(n),this._templating.hideEditIcon(n));i===t.status.UPLOAD_RETRYING&&r===t.status.UPLOADING?(this._templating.hideRetry(n),this._templating.setStatusText(n),t(this._templating.getFileContainer(n)).removeClass(this._classes.retrying)):r===t.status.UPLOAD_FAILED&&this._templating.hidePause(n)},_bindFilenameInputFocusInEvent:function(){var n=t.extend({},this._filenameEditHandler());return new t.FilenameInputFocusInHandler(n)},_bindFilenameInputFocusEvent:function(){var n=t.extend({},this._filenameEditHandler());return new t.FilenameInputFocusHandler(n)},_bindFilenameClickEvent:function(){var n=t.extend({},this._filenameEditHandler());return new t.FilenameClickHandler(n)},_storeForLater:function(n){this._parent.prototype._storeForLater.apply(this,arguments);this._templating.hideSpinner(n)},_onAllComplete:function(){this._parent.prototype._onAllComplete.apply(this,arguments);this._templating.resetTotalProgress()},_onSubmit:function(n,t){var i=this.getFile(n);i&&i.qqPath&&this._options.dragAndDrop.reportDirectoryPaths&&this._paramsStore.addReadOnly(n,{qqpath:i.qqPath});this._parent.prototype._onSubmit.apply(this,arguments);this._addToList(n,t)},_onSubmitted:function(n){this._isEditFilenameEnabled()&&(this._templating.markFilenameEditable(n),this._templating.showEditIcon(n),this._focusinEventSupported||this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(n)))},_onProgress:function(n,t,i,r){this._parent.prototype._onProgress.apply(this,arguments);this._templating.updateProgress(n,i,r);0===r||100===Math.round(i/r*100)?(this._templating.hideCancel(n),this._templating.hidePause(n),this._templating.hideProgress(n),this._templating.setStatusText(n,this._options.text.waitingForResponse),this._displayFileSize(n)):this._displayFileSize(n,i,r)},_onTotalProgress:function(n,t){this._parent.prototype._onTotalProgress.apply(this,arguments);this._templating.updateTotalProgress(n,t)},_onComplete:function(n,i,r){function s(i){e&&(u.setStatusText(n),t(e).removeClass(f._classes.retrying),u.hideProgress(n),f.getUploads({id:n}).status!==t.status.UPLOAD_FAILED&&u.hideCancel(n),u.hideSpinner(n),i.success?f._markFileAsSuccessful(n):(t(e).addClass(f._classes.fail),u.showCancel(n),u.isRetryPossible()&&!f._preventRetries[n]&&(t(e).addClass(f._classes.retryable),u.showRetry(n)),f._controlFailureTextDisplay(n,i)))}var o=this._parent.prototype._onComplete.apply(this,arguments),u=this._templating,e=u.getFileContainer(n),f=this;return o instanceof t.Promise?o.done(function(n){s(n)}):s(r),o},_markFileAsSuccessful:function(n){var i=this._templating;this._isDeletePossible()&&i.showDeleteButton(n);t(i.getFileContainer(n)).addClass(this._classes.success);this._maybeUpdateThumbnail(n)},_onUploadPrep:function(n){this._parent.prototype._onUploadPrep.apply(this,arguments);this._templating.showSpinner(n)},_onUpload:function(n){var t=this._parent.prototype._onUpload.apply(this,arguments);return this._templating.showSpinner(n),t},_onUploadChunk:function(n,t){this._parent.prototype._onUploadChunk.apply(this,arguments);t.partIndex>0&&this._handler.isResumable(n)&&this._templating.allowPause(n)},_onCancel:function(n){this._parent.prototype._onCancel.apply(this,arguments);this._removeFileItem(n);0===this._getNotFinished()&&this._templating.resetTotalProgress()},_onBeforeAutoRetry:function(n){var r,u,i;this._parent.prototype._onBeforeAutoRetry.apply(this,arguments);this._showCancelLink(n);this._options.retry.showAutoRetryNote&&(r=this._autoRetries[n],u=this._options.retry.maxAutoAttempts,i=this._options.retry.autoRetryNote.replace(/\{retryNum\}/g,r),i=i.replace(/\{maxAuto\}/g,u),this._templating.setStatusText(n,i),t(this._templating.getFileContainer(n)).addClass(this._classes.retrying))},_onBeforeManualRetry:function(n){return this._parent.prototype._onBeforeManualRetry.apply(this,arguments)?(this._templating.resetProgress(n),t(this._templating.getFileContainer(n)).removeClass(this._classes.fail),this._templating.setStatusText(n),this._templating.showSpinner(n),this._showCancelLink(n),!0):(t(this._templating.getFileContainer(n)).addClass(this._classes.retryable),this._templating.showRetry(n),!1)},_onSubmitDelete:function(n){var i=t.bind(this._onSubmitDeleteSuccess,this);this._parent.prototype._onSubmitDelete.call(this,n,i)},_onSubmitDeleteSuccess:function(){this._options.deleteFile.forceConfirm?this._showDeleteConfirm.apply(this,arguments):this._sendDeleteRequest.apply(this,arguments)},_onDeleteComplete:function(n,t,i){this._parent.prototype._onDeleteComplete.apply(this,arguments);this._templating.hideSpinner(n);i?(this._templating.setStatusText(n,this._options.deleteFile.deletingFailedText),this._templating.showDeleteButton(n)):this._removeFileItem(n)},_sendDeleteRequest:function(n){this._templating.hideDeleteButton(n);this._templating.showSpinner(n);this._templating.setStatusText(n,this._options.deleteFile.deletingStatusText);this._deleteHandler.sendDelete.apply(this,arguments)},_showDeleteConfirm:function(n){var i,f=this.getName(n),e=this._options.deleteFile.confirmMessage.replace(/\{filename\}/g,f),u=(this.getUuid(n),arguments),r=this;i=this._options.showConfirm(e);t.isGenericPromise(i)?i.then(function(){r._sendDeleteRequest.apply(r,u)}):i!==!1&&r._sendDeleteRequest.apply(r,u)},_addToList:function(n,i,r){var f,u,e=0,o=this._handler.isProxied(n)&&this._options.scaling.hideScaled;this._options.display.prependFiles&&(this._totalFilesInBatch>1&&this._filesInBatchAddedToUi>0&&(e=this._filesInBatchAddedToUi-1),f={index:e});r||(this._options.disableCancelForFormUploads&&!t.supportedFeatures.ajaxUploading&&this._templating.disableCancel(),this._options.multiple||(u=this.getUploads({id:n}),this._handledProxyGroup=this._handledProxyGroup||u.proxyGroupId,u.proxyGroupId===this._handledProxyGroup&&u.proxyGroupId||(this._handler.cancelAll(),this._clearList(),this._handledProxyGroup=null)));r?(this._templating.addFileToCache(n,this._options.formatFileName(i),f,o),this._templating.updateThumbnail(n,this._thumbnailUrls[n],!0,this._options.thumbnails.customResizer)):(this._templating.addFile(n,this._options.formatFileName(i),f,o),this._templating.generatePreview(n,this.getFile(n),this._options.thumbnails.customResizer));this._filesInBatchAddedToUi+=1;(r||this._options.display.fileSizeOnSubmit&&t.supportedFeatures.ajaxUploading)&&this._displayFileSize(n)},_clearList:function(){this._templating.clearFiles();this.clearStoredFiles()},_displayFileSize:function(n,t,i){var r=this.getSize(n),u=this._formatSize(r);r>=0&&(void 0!==t&&void 0!==i&&(u=this._formatProgress(t,i)),this._templating.updateSize(n,u))},_formatProgress:function(n,t){function r(n,t){i=i.replace(n,t)}var i=this._options.text.formatProgress;return r("{percent}",Math.round(n/t*100)),r("{total_size}",this._formatSize(t)),i},_controlFailureTextDisplay:function(n,t){var i,u,r;i=this._options.failedUploadTextDisplay.mode;u=this._options.failedUploadTextDisplay.responseProperty;"custom"===i?(r=t[u],r||(r=this._options.text.failUpload),this._templating.setStatusText(n,r),this._options.failedUploadTextDisplay.enableTooltip&&this._showTooltip(n,r)):"default"===i?this._templating.setStatusText(n,this._options.text.failUpload):"none"!==i&&this.log("failedUploadTextDisplay.mode value of '"+i+"' is not valid","warn")},_showTooltip:function(n,t){this._templating.getFileContainer(n).title=t},_showCancelLink:function(n){this._options.disableCancelForFormUploads&&!t.supportedFeatures.ajaxUploading||this._templating.showCancel(n)},_itemError:function(){var n=this._parent.prototype._itemError.apply(this,arguments);this._options.showMessage(n)},_batchError:function(n){this._parent.prototype._batchError.apply(this,arguments);this._options.showMessage(n)},_setupPastePrompt:function(){var n=this;this._options.callbacks.onPasteReceived=function(){var t=n._options.paste.namePromptMessage,i=n._options.paste.defaultName;return n._options.showPrompt(t,i)}},_fileOrBlobRejected:function(){this._totalFilesInBatch-=1;this._parent.prototype._fileOrBlobRejected.apply(this,arguments)},_prepareItemsForUpload:function(n){this._totalFilesInBatch=n.length;this._filesInBatchAddedToUi=0;this._parent.prototype._prepareItemsForUpload.apply(this,arguments)},_maybeUpdateThumbnail:function(n){var i=this._thumbnailUrls[n];this.getUploads({id:n}).status!==t.status.DELETED&&(i||this._options.thumbnails.placeholders.waitUntilResponse||!t.supportedFeatures.imagePreviews)&&this._templating.updateThumbnail(n,i,this._options.thumbnails.customResizer)},_addCannedFile:function(){var n=this._parent.prototype._addCannedFile.apply(this,arguments);return this._addToList(n,this.getName(n),!0),this._templating.hideSpinner(n),this._templating.hideCancel(n),this._markFileAsSuccessful(n),n},_setSize:function(n,t){this._parent.prototype._setSize.apply(this,arguments);this._templating.updateSize(n,this._formatSize(t))},_sessionRequestComplete:function(){this._templating.addCacheToDom();this._parent.prototype._sessionRequestComplete.apply(this,arguments)}}}();t.FineUploader=function(n,i){"use strict";var r=this;this._parent=i?t[i].FineUploaderBasic:t.FineUploaderBasic;this._parent.apply(this,arguments);t.extend(this._options,{element:null,button:null,listElement:null,dragAndDrop:{extraDropzones:[],reportDirectoryPaths:!1},text:{formatProgress:"{percent}% of {total_size}",failUpload:"Upload failed",waitingForResponse:"Processing...",paused:"Paused"},template:"qq-template",classes:{retrying:"qq-upload-retrying",retryable:"qq-upload-retryable",success:"qq-upload-success",fail:"qq-upload-fail",editable:"qq-editable",hide:"qq-hide",dropActive:"qq-upload-drop-area-active"},failedUploadTextDisplay:{mode:"default",responseProperty:"error",enableTooltip:!0},messages:{tooManyFilesError:"You may only drop one file",unsupportedBrowser:"Unrecoverable error - this browser does not permit file uploading of any kind."},retry:{showAutoRetryNote:!0,autoRetryNote:"Retrying {retryNum}/{maxAuto}..."},deleteFile:{forceConfirm:!1,confirmMessage:"Are you sure you want to delete {filename}?",deletingStatusText:"Deleting...",deletingFailedText:"Delete failed"},display:{fileSizeOnSubmit:!1,prependFiles:!1},paste:{promptForName:!1,namePromptMessage:"Please name this image"},thumbnails:{customResizer:null,maxCount:0,placeholders:{waitUntilResponse:!1,notAvailablePath:null,waitingPath:null},timeBetweenThumbs:750},scaling:{hideScaled:!1},showMessage:function(n){if(r._templating.hasDialog("alert"))return r._templating.showDialog("alert",n);setTimeout(function(){window.alert(n)},0)},showConfirm:function(n){return r._templating.hasDialog("confirm")?r._templating.showDialog("confirm",n):window.confirm(n)},showPrompt:function(n,t){return r._templating.hasDialog("prompt")?r._templating.showDialog("prompt",n,t):window.prompt(n,t)}},!0);t.extend(this._options,n,!0);this._templating=new t.Templating({log:t.bind(this.log,this),templateIdOrEl:this._options.template,containerEl:this._options.element,fileContainerEl:this._options.listElement,button:this._options.button,imageGenerator:this._imageGenerator,classes:{hide:this._options.classes.hide,editable:this._options.classes.editable},limits:{maxThumbs:this._options.thumbnails.maxCount,timeBetweenThumbs:this._options.thumbnails.timeBetweenThumbs},placeholders:{waitUntilUpdate:this._options.thumbnails.placeholders.waitUntilResponse,thumbnailNotAvailable:this._options.thumbnails.placeholders.notAvailablePath,waitingForThumbnail:this._options.thumbnails.placeholders.waitingPath},text:this._options.text});this._options.workarounds.ios8SafariUploads&&t.ios800()&&t.iosSafari()?this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari):!t.supportedFeatures.uploading||this._options.cors.expected&&!t.supportedFeatures.uploadCors?this._templating.renderFailure(this._options.messages.unsupportedBrowser):(this._wrapCallbacks(),this._templating.render(),this._classes=this._options.classes,!this._options.button&&this._templating.getButton()&&(this._defaultButtonId=this._createUploadButton({element:this._templating.getButton(),title:this._options.text.fileInputTitle}).getButtonId()),this._setupClickAndEditEventHandlers(),t.DragAndDrop&&t.supportedFeatures.fileDrop&&(this._dnd=this._setupDragAndDrop()),this._options.paste.targetElement&&this._options.paste.promptForName&&(t.PasteSupport?this._setupPastePrompt():this.log("Paste support module not found.","error")),this._totalFilesInBatch=0,this._filesInBatchAddedToUi=0)};t.extend(t.FineUploader.prototype,t.basePublicApi);t.extend(t.FineUploader.prototype,t.basePrivateApi);t.extend(t.FineUploader.prototype,t.uiPublicApi);t.extend(t.FineUploader.prototype,t.uiPrivateApi);t.Templating=function(n){"use strict";var h,yt,pt,et,s,v,y,ot,p={content:document.createDocumentFragment(),map:{}},st=!1,w=0,g=!1,nt=[],a=-1,r={log:null,limits:{maxThumbs:0,timeBetweenThumbs:750},templateIdOrEl:"qq-template",containerEl:null,fileContainerEl:null,button:null,imageGenerator:null,classes:{hide:"qq-hide",editable:"qq-editable"},placeholders:{waitUntilUpdate:!1,thumbnailNotAvailable:null,waitingForThumbnail:null},text:{paused:"Paused"}},i={button:"qq-upload-button-selector",alertDialog:"qq-alert-dialog-selector",dialogCancelButton:"qq-cancel-button-selector",confirmDialog:"qq-confirm-dialog-selector",dialogMessage:"qq-dialog-message-selector",dialogOkButton:"qq-ok-button-selector",promptDialog:"qq-prompt-dialog-selector",uploader:"qq-uploader-selector",drop:"qq-upload-drop-area-selector",list:"qq-upload-list-selector",progressBarContainer:"qq-progress-bar-container-selector",progressBar:"qq-progress-bar-selector",totalProgressBarContainer:"qq-total-progress-bar-container-selector",totalProgressBar:"qq-total-progress-bar-selector",file:"qq-upload-file-selector",spinner:"qq-upload-spinner-selector",size:"qq-upload-size-selector",cancel:"qq-upload-cancel-selector",pause:"qq-upload-pause-selector",continueButton:"qq-upload-continue-selector",deleteButton:"qq-upload-delete-selector",retry:"qq-upload-retry-selector",statusText:"qq-upload-status-text-selector",editFilenameInput:"qq-edit-filename-selector",editNameIcon:"qq-edit-filename-icon-selector",dropText:"qq-upload-drop-area-text-selector",dropProcessing:"qq-drop-processing-selector",dropProcessingSpinner:"qq-drop-processing-spinner-selector",thumbnail:"qq-thumbnail-selector"},l={},tt=new t.Promise,d=new t.Promise,ti=function(){var n=r.placeholders.thumbnailNotAvailable,t=r.placeholders.waitingForThumbnail,i={maxSize:a,scale:ot};y&&(n?r.imageGenerator.generate(n,new Image,i).then(function(n){tt.success(n)},function(){tt.failure();h("Problem loading 'not available' placeholder image at "+n,"error")}):tt.failure(),t?r.imageGenerator.generate(t,new Image,i).then(function(n){d.success(n)},function(){d.failure();h("Problem loading 'waiting for thumbnail' placeholder image at "+t,"error")}):d.failure())},ht=function(n){var i=new t.Promise;return d.then(function(t){gt(t,n);n.src?i.success():(n.src=t.src,n.onload=function(){n.onload=null;o(n);i.success()})},function(){f(n);i.success()}),i},ii=function(n,t,i){var u=b(n);return h("Generating new thumbnail for "+n),t.qqThumbnailId=n,r.imageGenerator.generate(t,u,i).then(function(){w++;o(u);l[n].success()},function(){l[n].failure();r.placeholders.waitUntilUpdate||k(n,u)})},c=function(){if(nt.length){g=!0;var n=nt.shift();n.update?ei(n):fi(n)}else g=!1},wt=function(n){return u(e(n),i.cancel)},ct=function(n){return u(e(n),i.continueButton)},bt=function(n){return u(s,i[n+"Dialog"])},lt=function(n){return u(e(n),i.deleteButton)},at=function(){return u(s,i.dropProcessing)},kt=function(n){return u(e(n),i.editNameIcon)},e=function(n){return p.map[n]||t(v).getFirstByClass("qq-file-id-"+n)},it=function(n){return u(e(n),i.file)},rt=function(n){return u(e(n),i.pause)},ut=function(n){return null==n?u(s,i.totalProgressBarContainer)||u(s,i.totalProgressBar):u(e(n),i.progressBarContainer)||u(e(n),i.progressBar)},vt=function(n){return u(e(n),i.retry)},dt=function(n){return u(e(n),i.size)},ft=function(n){return u(e(n),i.spinner)},u=function(n,i){return n&&t(n).getFirstByClass(i)},b=function(n){return y&&u(e(n),i.thumbnail)},f=function(n){n&&t(n).addClass(r.classes.hide)},gt=function(n,i){var r=n.style.maxWidth,u=n.style.maxHeight;u&&r&&!i.style.maxWidth&&!i.style.maxHeight&&t(i).css({maxWidth:r,maxHeight:u})},k=function(n,i){var u=l[n]||(new t.Promise).failure(),r=new t.Promise;return tt.then(function(n){u.then(function(){r.success()},function(){gt(n,i);i.onload=function(){i.onload=null;r.success()};i.src=n.src;o(i)})}),r},ri=function(){var s,e,o,n,w,c,u,f,l,v,p;if(h("Parsing template"),null==r.templateIdOrEl)throw new Error("You MUST specify either a template element or ID!");if(t.isString(r.templateIdOrEl)){if(s=document.getElementById(r.templateIdOrEl),null===s)throw new Error(t.format("Cannot find template script at ID '{}'!",r.templateIdOrEl));e=s.innerHTML}else{if(void 0===r.templateIdOrEl.innerHTML)throw new Error("You have specified an invalid value for the template option!  It must be an ID or an Element.");e=r.templateIdOrEl.innerHTML}if(e=t.trimStr(e),n=document.createElement("div"),n.appendChild(t.toElement(e)),p=t(n).getFirstByClass(i.uploader),r.button&&(c=t(n).getFirstByClass(i.button),c&&t(c).remove()),t.DragAndDrop&&t.supportedFeatures.fileDrop||(l=t(n).getFirstByClass(i.dropProcessing),l&&t(l).remove()),u=t(n).getFirstByClass(i.drop),u&&!t.DragAndDrop&&(h("DnD module unavailable.","info"),t(u).remove()),t.supportedFeatures.fileDrop?t(p).hasAttribute("qq-drop-area-text")&&u&&(v=t(u).getFirstByClass(i.dropText),v&&t(v).remove()):(p.removeAttribute("qq-drop-area-text"),u&&t(u).hasAttribute("qq-hide-dropzone")&&t(u).css({display:"none"})),f=t(n).getFirstByClass(i.thumbnail),y?f&&(a=parseInt(f.getAttribute("qq-max-size")),a=a>0?a:null,ot=t(f).hasAttribute("qq-server-scale")):f&&t(f).remove(),y=y&&f,yt=t(n).getByClass(i.editFilenameInput).length>0,pt=t(n).getByClass(i.retry).length>0,o=t(n).getFirstByClass(i.list),null==o)throw new Error("Could not find the file list container in the template!");return w=o.children[0].cloneNode(!0),o.innerHTML="",n.getElementsByTagName("DIALOG").length&&document.createElement("dialog"),h("Template parsing complete"),{template:n,fileTemplate:w}},ui=function(n,i,r){var u=r,f=u.firstChild;i>0&&(f=t(u).children()[i].nextSibling);u.insertBefore(n,f)},fi=function(n){var i=n.id,f=n.optFileOrBlob,e=f&&f.qqThumbnailId,u=b(i),o={customResizeFunction:n.customResizeFunction,maxSize:a,orient:!0,scale:!0};t.supportedFeatures.imagePreviews?u?r.limits.maxThumbs&&r.limits.maxThumbs<=w?(k(i,u),c()):ht(u).done(function(){l[i]=new t.Promise;l[i].done(function(){setTimeout(c,r.limits.timeBetweenThumbs)});null!=e?oi(i,e):ii(i,f,o)}):c():u&&(ht(u),c())},ei=function(n){var i=n.id,u=n.thumbnailUrl,f=n.showWaitingImg,t=b(i),e={customResizeFunction:n.customResizeFunction,scale:ot,maxSize:a};if(t)if(u){if(!(r.limits.maxThumbs&&r.limits.maxThumbs<=w))return f&&ht(t),r.imageGenerator.generate(u,t,e).then(function(){o(t);w++;setTimeout(c,r.limits.timeBetweenThumbs)},function(){k(i,t);setTimeout(c,r.limits.timeBetweenThumbs)});k(i,t);c()}else k(i,t),c()},ni=function(n,r){var u=ut(n),f=null==n?i.totalProgressBar:i.progressBar;u&&!t(u).hasClass(f)&&(u=t(u).getFirstByClass(f));u&&(t(u).css({width:r+"%"}),u.setAttribute("aria-valuenow",r))},o=function(n){n&&t(n).removeClass(r.classes.hide)},oi=function(n,i){var u=b(n),f=b(i);h(t.format("ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.",n,i,i));l[i].then(function(){w++;l[n].success();h(t.format("Now using previously generated thumbnail created for ID {} on ID {}.",i,n));u.src=f.src;o(u)},function(){l[n].failure();r.placeholders.waitUntilUpdate||k(n,u)})};t.extend(r,n);h=r.log;t.supportedFeatures.imagePreviews||(r.limits.timeBetweenThumbs=0,r.limits.maxThumbs=0);s=r.containerEl;y=void 0!==r.imageGenerator;et=ri();ti();t.extend(this,{render:function(){h("Rendering template in DOM.");w=0;s.appendChild(et.template.cloneNode(!0));f(at());this.hideTotalProgress();v=r.fileContainerEl||u(s,i.list);h("Template rendering complete")},renderFailure:function(n){var i=t.toElement(n);s.innerHTML="";s.appendChild(i)},reset:function(){s.innerHTML="";this.render()},clearFiles:function(){v.innerHTML=""},disableCancel:function(){st=!0},addFile:function(n,r,e,h,c){var a,l=et.fileTemplate.cloneNode(!0),y=u(l,i.file),k=u(s,i.uploader),w=c?p.content:v;c&&(p.map[n]=l);t(l).addClass("qq-file-id-"+n);k.removeAttribute("qq-drop-area-text");y&&(t(y).setText(r),y.setAttribute("title",r));l.setAttribute("qq-file-id",n);e?ui(l,e.index,w):w.appendChild(l);h?(l.style.display="none",t(l).addClass("qq-hidden-forever")):(f(ut(n)),f(dt(n)),f(lt(n)),f(vt(n)),f(rt(n)),f(ct(n)),st&&this.hideCancel(n),a=b(n),a&&!a.src&&d.then(function(n){a.src=n.src;n.style.maxHeight&&n.style.maxWidth&&t(a).css({maxHeight:n.style.maxHeight,maxWidth:n.style.maxWidth});o(a)}))},addFileToCache:function(n,t,i,r){this.addFile(n,t,i,r,!0)},addCacheToDom:function(){v.appendChild(p.content);p.content=document.createDocumentFragment();p.map={}},removeFile:function(n){t(e(n)).remove()},getFileId:function(n){var t=n;if(t){for(;null==t.getAttribute("qq-file-id");)t=t.parentNode;return parseInt(t.getAttribute("qq-file-id"))}},getFileList:function(){return v},markFilenameEditable:function(n){var i=it(n);i&&t(i).addClass(r.classes.editable)},updateFilename:function(n,i){var r=it(n);r&&(t(r).setText(i),r.setAttribute("title",i))},hideFilename:function(n){f(it(n))},showFilename:function(n){o(it(n))},isFileName:function(n){return t(n).hasClass(i.file)},getButton:function(){return r.button||u(s,i.button)},hideDropProcessing:function(){f(at())},showDropProcessing:function(){o(at())},getDropZone:function(){return u(s,i.drop)},isEditFilenamePossible:function(){return yt},hideRetry:function(n){f(vt(n))},isRetryPossible:function(){return pt},showRetry:function(n){o(vt(n))},getFileContainer:function(n){return e(n)},showEditIcon:function(n){var i=kt(n);i&&t(i).addClass(r.classes.editable)},isHiddenForever:function(n){return t(e(n)).hasClass("qq-hidden-forever")},hideEditIcon:function(n){var i=kt(n);i&&t(i).removeClass(r.classes.editable)},isEditIcon:function(n){return t(n).hasClass(i.editNameIcon,!0)},getEditInput:function(n){return u(e(n),i.editFilenameInput)},isEditInput:function(n){return t(n).hasClass(i.editFilenameInput,!0)},updateProgress:function(n,t,i){var r,u=ut(n);u&&i>0&&(r=Math.round(t/i*100),100===r?f(u):o(u),ni(n,r))},updateTotalProgress:function(n,t){this.updateProgress(null,n,t)},hideProgress:function(n){var t=ut(n);t&&f(t)},hideTotalProgress:function(){this.hideProgress()},resetProgress:function(n){ni(n,0);this.hideTotalProgress(n)},resetTotalProgress:function(){this.resetProgress()},showCancel:function(n){if(!st){var i=wt(n);i&&t(i).removeClass(r.classes.hide)}},hideCancel:function(n){f(wt(n))},isCancel:function(n){return t(n).hasClass(i.cancel,!0)},allowPause:function(n){o(rt(n));f(ct(n))},uploadPaused:function(n){this.setStatusText(n,r.text.paused);this.allowContinueButton(n);f(ft(n))},hidePause:function(n){f(rt(n))},isPause:function(n){return t(n).hasClass(i.pause,!0)},isContinueButton:function(n){return t(n).hasClass(i.continueButton,!0)},allowContinueButton:function(n){o(ct(n));f(rt(n))},uploadContinued:function(n){this.setStatusText(n,"");this.allowPause(n);o(ft(n))},showDeleteButton:function(n){o(lt(n))},hideDeleteButton:function(n){f(lt(n))},isDeleteButton:function(n){return t(n).hasClass(i.deleteButton,!0)},isRetry:function(n){return t(n).hasClass(i.retry,!0)},updateSize:function(n,i){var r=dt(n);r&&(o(r),t(r).setText(i))},setStatusText:function(n,r){var f=u(e(n),i.statusText);f&&(null==r?t(f).clearText():t(f).setText(r))},hideSpinner:function(n){t(e(n)).removeClass("qq-in-progress");f(ft(n))},showSpinner:function(n){t(e(n)).addClass("qq-in-progress");o(ft(n))},generatePreview:function(n,t,i){this.isHiddenForever(n)||(nt.push({id:n,customResizeFunction:i,optFileOrBlob:t}),!g&&c())},updateThumbnail:function(n,t,i,r){this.isHiddenForever(n)||(nt.push({customResizeFunction:r,update:!0,id:n,thumbnailUrl:t,showWaitingImg:i}),!g&&c())},hasDialog:function(n){return t.supportedFeatures.dialogElement&&!!bt(n)},showDialog:function(n,r,f){var e=bt(n),y=u(e,i.dialogMessage),s=e.getElementsByTagName("INPUT")[0],h=u(e,i.dialogCancelButton),o=u(e,i.dialogOkButton),c=new t.Promise,v=function(){h.removeEventListener("click",l);o&&o.removeEventListener("click",a);c.failure()},l=function(){h.removeEventListener("click",l);e.close()},a=function(){e.removeEventListener("close",v);o.removeEventListener("click",a);e.close();c.success(s&&s.value)};return e.addEventListener("close",v),h.addEventListener("click",l),o&&o.addEventListener("click",a),s&&(s.value=f),y.textContent=r,e.showModal(),c}})};t.UiEventHandler=function(n,i){"use strict";function f(n){u.attach(n,r.eventType,function(n){n=n||window.event;var t=n.target||n.srcElement;r.onHandled(t,n)})}var u=new t.DisposeSupport,r={eventType:"click",attachTo:null,onHandled:function(){}};t.extend(this,{addHandler:function(n){f(n)},dispose:function(){u.dispose()}});t.extend(i,{getFileIdFromItem:function(n){return n.qqFileId},getDisposeSupport:function(){return u}});t.extend(r,n);r.attachTo&&f(r.attachTo)};t.FileButtonsClickHandler=function(n){"use strict";function r(n,r){t.each(u,function(u,f){var e,o=u.charAt(0).toUpperCase()+u.slice(1);if(i.templating["is"+o](n))return e=i.templating.getFileId(n),t.preventDefault(r),i.log(t.format("Detected valid file button click event on file '{}', ID: {}.",i.onGetName(e),e)),f(e),!1})}var i={templating:null,log:function(){},onDeleteFile:function(){},onCancel:function(){},onRetry:function(){},onPause:function(){},onContinue:function(){},onGetName:function(){}},u={cancel:function(n){i.onCancel(n)},retry:function(n){i.onRetry(n)},deleteButton:function(n){i.onDeleteFile(n)},pause:function(n){i.onPause(n)},continueButton:function(n){i.onContinue(n)}};t.extend(i,n);i.eventType="click";i.onHandled=r;i.attachTo=i.templating.getFileList();t.extend(this,new t.UiEventHandler(i,{}))};t.FilenameClickHandler=function(n){"use strict";function u(n,u){if(i.templating.isFileName(n)||i.templating.isEditIcon(n)){var f=i.templating.getFileId(n);i.onGetUploadStatus(f)===t.status.SUBMITTED&&(i.log(t.format("Detected valid filename click event on file '{}', ID: {}.",i.onGetName(f),f)),t.preventDefault(u),r.handleFilenameEdit(f,n,!0))}}var r={},i={templating:null,log:function(){},classes:{file:"qq-upload-file",editNameIcon:"qq-edit-filename-icon"},onGetUploadStatus:function(){},onGetName:function(){}};t.extend(i,n);i.eventType="click";i.onHandled=u;t.extend(this,new t.FilenameEditHandler(i,r))};t.FilenameInputFocusInHandler=function(n,i){"use strict";function u(n){if(r.templating.isEditInput(n)){var u=r.templating.getFileId(n);r.onGetUploadStatus(u)===t.status.SUBMITTED&&(r.log(t.format("Detected valid filename input focus event on file '{}', ID: {}.",r.onGetName(u),u)),i.handleFilenameEdit(u,n))}}var r={templating:null,onGetUploadStatus:function(){},log:function(){}};i||(i={});r.eventType="focusin";r.onHandled=u;t.extend(r,n);t.extend(this,new t.FilenameEditHandler(r,i))};t.FilenameInputFocusHandler=function(n){"use strict";n.eventType="focus";n.attachTo=null;t.extend(this,new t.FilenameInputFocusInHandler(n,{}))};t.FilenameEditHandler=function(n,i){"use strict";function f(n){var t=r.onGetName(n),i=t.lastIndexOf(".");return i>0&&(t=t.substr(0,i)),t}function e(n){var i=r.onGetName(n);return t.getExtension(i)}function u(n,i){var f,u=n.value;void 0!==u&&t.trimStr(u).length>0&&(f=e(i),void 0!==f&&(u=u+"."+f),r.onSetName(i,u));r.onEditingStatusChange(i,!1)}function o(n,t){i.getDisposeSupport().attach(n,"blur",function(){u(n,t)})}function s(n,t){i.getDisposeSupport().attach(n,"keyup",function(i){13===(i.keyCode||i.which)&&u(n,t)})}var r={templating:null,log:function(){},onGetUploadStatus:function(){},onGetName:function(){},onSetName:function(){},onEditingStatusChange:function(){}};t.extend(r,n);r.attachTo=r.templating.getFileList();t.extend(this,new t.UiEventHandler(r,i));t.extend(i,{handleFilenameEdit:function(n,t,i){var u=r.templating.getEditInput(n);r.onEditingStatusChange(n,!0);u.value=f(n);i&&u.focus();o(u,n);s(u,n)}})}}(window);
","CacheKey":"Bt8Gwwcl2CFi_m1LLM5ZuoD9j6U"}